{
    "instructions": [
        {
            "instruction": "BSWAP",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Byte swap"
        },
        {
            "instruction": "MOVBE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move data after swapping data bytes"
        },
        {
            "instruction": "MOV",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move data between general-purpose registers, segment registers, memory, and from immediate to general-purpose registers"
        },
        {
            "instruction": "MOVZX",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move and zero extend"
        },
        {
            "instruction": "MOVSX",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move and sign extend"
        },
        {
            "instruction": "MOVSXD",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move and sign extend"
        },
        {
            "instruction": "CMOVE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if equal"
        },
        {
            "instruction": "CMOVA",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if above"
        },
        {
            "instruction": "CMOVAE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if above or equal"
        },
        {
            "instruction": "CMOVB",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if below"
        },
        {
            "instruction": "CMOVBE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if below or equal"
        },
        {
            "instruction": "CMOVG",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if greater"
        },
        {
            "instruction": "CMOVGE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if greater or equal"
        },
        {
            "instruction": "CMOVL",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if less"
        },
        {
            "instruction": "CMOVLE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if less or equal"
        },
        {
            "instruction": "CMOVZ",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if zero"
        },
        {
            "instruction": "CMOVC",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if carry"
        },
        {
            "instruction": "CMOVO",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if overflow"
        },
        {
            "instruction": "CMOVS",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if sign (negative)"
        },
        {
            "instruction": "CMOVP",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if parity"
        },
        {
            "instruction": "CMOVNE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if not equal"
        },
        {
            "instruction": "CMOVNA",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if not above"
        },
        {
            "instruction": "CMOVNAE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if not above or equal"
        },
        {
            "instruction": "CMOVNB",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if not below"
        },
        {
            "instruction": "CMOVNBE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if not below or equal"
        },
        {
            "instruction": "CMOVNG",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if not greater"
        },
        {
            "instruction": "CMOVNGE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if not greater or equal"
        },
        {
            "instruction": "CMOVNL",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if not less"
        },
        {
            "instruction": "CMOVNLE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if not less or equal"
        },
        {
            "instruction": "CMOVNZ",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if not zero"
        },
        {
            "instruction": "CMOVNC",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if not carry"
        },
        {
            "instruction": "CMOVNO",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if not overflow"
        },
        {
            "instruction": "CMOVNS",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if not sign (non-negative)"
        },
        {
            "instruction": "CMOVNP",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if not parity"
        },
        {
            "instruction": "CMOVPE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if parity even"
        },
        {
            "instruction": "CMOVPO",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional move if parity odd"
        },
        {
            "instruction": "CBW",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Convert byte to word (sign-extend of AL to AX)"
        },
        {
            "instruction": "CWD",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Convert word to double word (sign-extend of AX to DX:AX)"
        },
        {
            "instruction": "CDQ",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Convert double word to quad word (sign-extend of EAX to EDX:EAX)"
        },
        {
            "instruction": "CQO",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Convert quad word to octal word (sign-extend of RAX to RDX:RAX)"
        },
        {
            "instruction": "CWDE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Convert word to double word (sign-extend of AX to EAX)"
        },
        {
            "instruction": "CDQE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Convert double word to quad word (sign-extend of EAX to RAX)"
        },
        {
            "instruction": "PUSH",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Push onto stack"
        },
        {
            "instruction": "PUSHA",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Push general-purpose registers: AX, CX, DX, BX, SP, BP, SI, DI onto stack"
        },
        {
            "instruction": "PUSHAD",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Push general-purpose registers: EAX, ECX, EDX, EBX, ESP, EBP, ESI, EDI onto stack"
        },
        {
            "instruction": "POP",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Pop off of stack"
        },
        {
            "instruction": "POPA",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Pop general-purpose registers: DI, SI, BP, BX, DX, CX, AX from stack"
        },
        {
            "instruction": "POPAD",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Pop general-purpose registers: EDI, ESI, EBP, EBX, EDX, ECX, EAX from stack"
        },
        {
            "instruction": "XLATB",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Table lookup translation"
        },
        {
            "instruction": "XCHG",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Exchange"
        },
        {
            "instruction": "XADD",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Exchange and add"
        },
        {
            "instruction": "CMPXCHG",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Compare and exchange"
        },
        {
            "instruction": "CMPXCHG8B",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Compare and exchange 8 bytes"
        },
        {
            "instruction": "CMPXCHG16B",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Compare and exchange 16 bytes"
        },
        {
            "instruction": "ADCX",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Binary Arithmetic Instructions",
            "description": "Unsigned integer add with carry"
        },
        {
            "instruction": "ADOX",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Binary Arithmetic Instructions",
            "description": "Unsigned integer add with overflow"
        },
        {
            "instruction": "INC",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Binary Arithmetic Instructions",
            "description": "Increment"
        },
        {
            "instruction": "ADD",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Binary Arithmetic Instructions",
            "description": "Add"
        },
        {
            "instruction": "ADC",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Binary Arithmetic Instructions",
            "description": "Add with carry"
        },
        {
            "instruction": "DEC",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Binary Arithmetic Instructions",
            "description": "Decrement"
        },
        {
            "instruction": "SUB",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Binary Arithmetic Instructions",
            "description": "Subtract"
        },
        {
            "instruction": "SBB",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Binary Arithmetic Instructions",
            "description": "Subtract with borrow"
        },
        {
            "instruction": "MUL",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Binary Arithmetic Instructions",
            "description": "Unsigned multiply"
        },
        {
            "instruction": "IMUL",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Binary Arithmetic Instructions",
            "description": "Signed multiply"
        },
        {
            "instruction": "DIV",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Binary Arithmetic Instructions",
            "description": "Unsigned divide"
        },
        {
            "instruction": "IDIV",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Binary Arithmetic Instructions",
            "description": "Signed divide"
        },
        {
            "instruction": "NEG",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Binary Arithmetic Instructions",
            "description": "Negate"
        },
        {
            "instruction": "CMP",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Binary Arithmetic Instructions",
            "description": "Compare"
        },
        {
            "instruction": "DAA",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Decimal Arithmetic Instructions",
            "description": "Decimal adjust after addition"
        },
        {
            "instruction": "DAS",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Decimal Arithmetic Instructions",
            "description": "Decimal adjust after subtraction"
        },
        {
            "instruction": "AAA",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Decimal Arithmetic Instructions",
            "description": "ASCII adjust after addition"
        },
        {
            "instruction": "AAS",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Decimal Arithmetic Instructions",
            "description": "ASCII adjust after subtraction"
        },
        {
            "instruction": "AAM",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Decimal Arithmetic Instructions",
            "description": "ASCII adjust after multiplication"
        },
        {
            "instruction": "AAD",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Decimal Arithmetic Instructions",
            "description": "ASCII adjust before division"
        },
        {
            "instruction": "AND",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Logical Instructions",
            "description": "Perform bitwise logical AND"
        },
        {
            "instruction": "OR",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Logical Instructions",
            "description": "Perform bitwise logical OR"
        },
        {
            "instruction": "XOR",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Logical Instructions",
            "description": "Perform bitwise logical exclusive OR"
        },
        {
            "instruction": "NOT",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Logical Instructions",
            "description": "Perform bitwise logical NOT"
        },
        {
            "instruction": "SHL",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Shift logical left"
        },
        {
            "instruction": "SHLD",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Shift left double"
        },
        {
            "instruction": "SHR",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Shift logical right"
        },
        {
            "instruction": "SHRD",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Shift right double"
        },
        {
            "instruction": "SAL",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Shift arithmetic left"
        },
        {
            "instruction": "SAR",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Shift arithmetic right"
        },
        {
            "instruction": "ROL",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Rotate left"
        },
        {
            "instruction": "ROR",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Rotate right"
        },
        {
            "instruction": "RCL",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Rotate through carry left"
        },
        {
            "instruction": "RCR",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Rotate through carry right"
        },
        {
            "instruction": "POPCNT",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Compute number of bits set to 1"
        },
        {
            "instruction": "TEST",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Logical compare"
        },
        {
            "instruction": "BT",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Bit test"
        },
        {
            "instruction": "BTS",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Bit test and set"
        },
        {
            "instruction": "BTR",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Bit test and reset"
        },
        {
            "instruction": "BTC",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Bit test and complement"
        },
        {
            "instruction": "BSF",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Bit scan forward"
        },
        {
            "instruction": "BSR",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Bit scan reverse"
        },
        {
            "instruction": "SETE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if equal"
        },
        {
            "instruction": "SETA",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if above"
        },
        {
            "instruction": "SETAE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if above or equal"
        },
        {
            "instruction": "SETB",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if below"
        },
        {
            "instruction": "SETBE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if below or equal"
        },
        {
            "instruction": "SETG",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if greater"
        },
        {
            "instruction": "SETGE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if greater or equal"
        },
        {
            "instruction": "SETL",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if less"
        },
        {
            "instruction": "SETLE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if less or equal"
        },
        {
            "instruction": "SETZ",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if zero"
        },
        {
            "instruction": "SETC",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if carry"
        },
        {
            "instruction": "SETO",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if overflow"
        },
        {
            "instruction": "SETS",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if sign (negative)"
        },
        {
            "instruction": "SETP",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if parity"
        },
        {
            "instruction": "SETNE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if not equal"
        },
        {
            "instruction": "SETNA",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if not above"
        },
        {
            "instruction": "SETNAE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if not above or equal"
        },
        {
            "instruction": "SETNB",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if not below"
        },
        {
            "instruction": "SETNBE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if not below or equal"
        },
        {
            "instruction": "SETNG",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if not greater"
        },
        {
            "instruction": "SETNGE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if not greater or equal"
        },
        {
            "instruction": "SETNL",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if not less"
        },
        {
            "instruction": "SETNLE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if not less or equal"
        },
        {
            "instruction": "SETNZ",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if not zero"
        },
        {
            "instruction": "SETNC",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if not carry"
        },
        {
            "instruction": "SETNO",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if not overflow"
        },
        {
            "instruction": "SETNS",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if not sign (non-negative)"
        },
        {
            "instruction": "SETNP",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if not parity"
        },
        {
            "instruction": "SETPE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if parity even"
        },
        {
            "instruction": "SETPO",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit and Byte Instructions",
            "description": "Set byte if parity odd"
        },
        {
            "instruction": "IN",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Read from a port"
        },
        {
            "instruction": "OUT",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Write to a port"
        },
        {
            "instruction": "INSB",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Input byte string from port"
        },
        {
            "instruction": "INSW",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Input word string from port"
        },
        {
            "instruction": "INSD",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Input double word string from port"
        },
        {
            "instruction": "OUTSB",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Output byte string to port"
        },
        {
            "instruction": "OUTSW",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Output word string to port"
        },
        {
            "instruction": "OUTSD",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Output double word string to port"
        },
        {
            "instruction": "LODSB",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Load byte string"
        },
        {
            "instruction": "LODSW",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Load word string"
        },
        {
            "instruction": "LODSD",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Load double word string"
        },
        {
            "instruction": "LODSQ",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Load quad word string"
        },
        {
            "instruction": "STOSB",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Store byte string"
        },
        {
            "instruction": "STOSW",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Store word string"
        },
        {
            "instruction": "STOSD",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Store double word string"
        },
        {
            "instruction": "STOSQ",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Store quad word string"
        },
        {
            "instruction": "MOVSB",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Move byte string"
        },
        {
            "instruction": "MOVSW",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Move word string"
        },
        {
            "instruction": "MOVSD",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Move double word string"
        },
        {
            "instruction": "MOVSQ",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Move quad word string"
        },
        {
            "instruction": "CMPSB",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Compare byte string"
        },
        {
            "instruction": "CMPSW",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Compare word string"
        },
        {
            "instruction": "CMPSD",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Compare double word string"
        },
        {
            "instruction": "CMPSQ",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Compare quad word string"
        },
        {
            "instruction": "SCASB",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Scan byte string"
        },
        {
            "instruction": "SCASW",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Scan word string"
        },
        {
            "instruction": "SCASD",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Scan double word string"
        },
        {
            "instruction": "SCASQ",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Scan quad word string"
        },
        {
            "instruction": "REP",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Repeat while ECX not zero"
        },
        {
            "instruction": "REPE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Repeat while equal"
        },
        {
            "instruction": "REPZ",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Repeat while zero"
        },
        {
            "instruction": "REPNE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Repeat while not equal"
        },
        {
            "instruction": "REPNZ",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "I/O and String Instructions",
            "description": "Repeat while not zero"
        },
        {
            "instruction": "JMP",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump"
        },
        {
            "instruction": "JE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if equal"
        },
        {
            "instruction": "JA",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if above"
        },
        {
            "instruction": "JAE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if above or equal"
        },
        {
            "instruction": "JB",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if below"
        },
        {
            "instruction": "JBE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if below or equal"
        },
        {
            "instruction": "JG",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if greater"
        },
        {
            "instruction": "JGE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if greater or equal"
        },
        {
            "instruction": "JL",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if less"
        },
        {
            "instruction": "JLE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if less or equal"
        },
        {
            "instruction": "JZ",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if zero"
        },
        {
            "instruction": "JC",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if carry"
        },
        {
            "instruction": "JO",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if overflow"
        },
        {
            "instruction": "JS",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if sign (negative)"
        },
        {
            "instruction": "JP",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if parity"
        },
        {
            "instruction": "JNE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if not equal"
        },
        {
            "instruction": "JNA",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if not above"
        },
        {
            "instruction": "JNAE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if not above or equal"
        },
        {
            "instruction": "JNB",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if not below"
        },
        {
            "instruction": "JNBE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if not below or equal"
        },
        {
            "instruction": "JNG",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if not greater"
        },
        {
            "instruction": "JNGE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if not greater or equal"
        },
        {
            "instruction": "JNL",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if not less"
        },
        {
            "instruction": "JNLE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if not less or equal"
        },
        {
            "instruction": "JNZ",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if not zero"
        },
        {
            "instruction": "JNC",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if not carry"
        },
        {
            "instruction": "JNO",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if not overflow"
        },
        {
            "instruction": "JNS",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if not sign (non-negative)"
        },
        {
            "instruction": "JNP",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if not parity"
        },
        {
            "instruction": "JPE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if parity even"
        },
        {
            "instruction": "JPO",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump if parity odd"
        },
        {
            "instruction": "JCXZ",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump register CX zero"
        },
        {
            "instruction": "JECXZ",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Jump register ECX zero"
        },
        {
            "instruction": "LOOP",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Loop with ECX counter"
        },
        {
            "instruction": "LOOPE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Loop with ECX and equal"
        },
        {
            "instruction": "LOOPZ",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Loop with ECX and zero"
        },
        {
            "instruction": "LOOPNE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Loop with ECX and not equal"
        },
        {
            "instruction": "LOOPNZ",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Loop with ECX and not zero"
        },
        {
            "instruction": "CALL",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Call procedure"
        },
        {
            "instruction": "RET",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Return"
        },
        {
            "instruction": "IRET",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Return from interrupt"
        },
        {
            "instruction": "INT",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Software interrupt"
        },
        {
            "instruction": "INTO",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Interrupt on overflow"
        },
        {
            "instruction": "BOUND",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Control Transfer Instructions",
            "description": "Detect value out of range"
        },
        {
            "instruction": "ENTER",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "High Level Procedure Instructions",
            "description": "High-level procedure entry"
        },
        {
            "instruction": "LEAVE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "High Level Procedure Instructions",
            "description": "High-level procedure exit"
        },
        {
            "instruction": "STI",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Flag Control Instructions",
            "description": "Set interrupt flag"
        },
        {
            "instruction": "STD",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Flag Control Instructions",
            "description": "Set direction flag"
        },
        {
            "instruction": "STC",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Flag Control Instructions",
            "description": "Set carry flag"
        },
        {
            "instruction": "CLI",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Flag Control Instructions",
            "description": "Clear the interrupt flag"
        },
        {
            "instruction": "CLD",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Flag Control Instructions",
            "description": "Clear the direction flag"
        },
        {
            "instruction": "CLC",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Flag Control Instructions",
            "description": "Clear the carry flag"
        },
        {
            "instruction": "CMC",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Flag Control Instructions",
            "description": "Complement the carry flag"
        },
        {
            "instruction": "STAC",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Flag Control Instructions",
            "description": "Set AC flag in EFLAGS register"
        },
        {
            "instruction": "CLAC",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Flag Control Instructions",
            "description": "Clear AC flag in EFLAGS register"
        },
        {
            "instruction": "LAHF",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Flag Control Instructions",
            "description": "Load flags into AH register"
        },
        {
            "instruction": "SAHF",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Flag Control Instructions",
            "description": "Store AH register into flags"
        },
        {
            "instruction": "PUSHF",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Flag Control Instructions",
            "description": "Push lower 16 bits of EFLAGS onto stack"
        },
        {
            "instruction": "PUSHFD",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Flag Control Instructions",
            "description": "Push EFLAGS onto stack"
        },
        {
            "instruction": "PUSHFQ",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Flag Control Instructions",
            "description": "Push RFLAGS onto stack"
        },
        {
            "instruction": "POPF",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Flag Control Instructions",
            "description": "Push lower 16 bits of EFLAGS from stack"
        },
        {
            "instruction": "POPFD",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Flag Control Instructions",
            "description": "Pop EFLAGS from stack"
        },
        {
            "instruction": "POPFQ",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Flag Control Instructions",
            "description": "Pop RFLAGS from stack"
        },
        {
            "instruction": "LEA",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Miscellaneous Instructions",
            "description": "Load effective address"
        },
        {
            "instruction": "NOP",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Miscellaneous Instructions",
            "description": "No operation"
        },
        {
            "instruction": "UD2",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Miscellaneous Instructions",
            "description": "Undefined instruction"
        },
        {
            "instruction": "RDPID",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Miscellaneous Instructions",
            "description": "Read processor ID"
        },
        {
            "instruction": "CPUID",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Miscellaneous Instructions",
            "description": "Processor identification"
        },
        {
            "instruction": "CRC32",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Miscellaneous Instructions",
            "description": "Provides hardware acceleration to calculate cyclic redundancy checks for fast and efficient implementation of data integrity protocols"
        },
        {
            "instruction": "RDRAND",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Random Number Generator Instructions",
            "description": "Retrieves a random number generated from hardware"
        },
        {
            "instruction": "RDSEED",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Random Number Generator Instructions",
            "description": "Retrieves a random number generated from hardware"
        },
        {
            "instruction": "BEXTR",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit manipulation instructions",
            "description": "Contiguous bitwise extract"
        },
        {
            "instruction": "BLSI",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit manipulation instructions",
            "description": "Extract lowest set bit"
        },
        {
            "instruction": "BLSR",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit manipulation instructions",
            "description": "Reset lowest set bit"
        },
        {
            "instruction": "BLSMSK",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit manipulation instructions",
            "description": "Set all lower bits below first set bit to 1"
        },
        {
            "instruction": "BZHI",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit manipulation instructions",
            "description": "Zero high bits starting from specified bit position"
        },
        {
            "instruction": "PEXT",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit manipulation instructions",
            "description": "Parallel extraction of bits using a mask"
        },
        {
            "instruction": "PDEP",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit manipulation instructions",
            "description": "Parallel deposit of bits using a mask"
        },
        {
            "instruction": "TZCNT",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit manipulation instructions",
            "description": "Count the number trailing zero bits"
        },
        {
            "instruction": "LZCNT",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit manipulation instructions",
            "description": "Count the number leading zero bits"
        },
        {
            "instruction": "ANDN",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit manipulation instructions",
            "description": "Bitwise AND of first source with inverted 2nd source operands"
        },
        {
            "instruction": "MULX",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit manipulation instructions",
            "description": "Unsigned multiply without affecting flags"
        },
        {
            "instruction": "SHLX",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit manipulation instructions",
            "description": "Shift logic left without affecting flags"
        },
        {
            "instruction": "SHRX",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit manipulation instructions",
            "description": "Shift logic right without affecting flags"
        },
        {
            "instruction": "SARX",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit manipulation instructions",
            "description": "Shift arithmetic right without affecting flags"
        },
        {
            "instruction": "RORX",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Bit manipulation instructions",
            "description": "Rotate right without affecting flags"
        },
        {
            "instruction": "LDS",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Segment Register Instructions",
            "description": "Load far pointer using DS"
        },
        {
            "instruction": "LES",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Segment Register Instructions",
            "description": "Load far pointer using ES"
        },
        {
            "instruction": "LFS",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Segment Register Instructions",
            "description": "Load far pointer using FS"
        },
        {
            "instruction": "LGS",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Segment Register Instructions",
            "description": "Load far pointer using GS"
        },
        {
            "instruction": "LSS",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "Segment Register Instructions",
            "description": "Load far pointer using SS"
        },
        {
            "instruction": "LLDT",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Load local descriptor table (LDT) register"
        },
        {
            "instruction": "SLDT",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Store local descriptor table (LDT) register"
        },
        {
            "instruction": "LGDT",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Load global descriptor table (GDT) register"
        },
        {
            "instruction": "SGDT",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Store global descriptor table (GDT) register"
        },
        {
            "instruction": "LIDT",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Load interrupt descriptor table (IDT) register"
        },
        {
            "instruction": "SIDT",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Store interrupt descriptor table (IDT) register"
        },
        {
            "instruction": "LMSW",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Load machine status word"
        },
        {
            "instruction": "SMSW",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Store machine status word"
        },
        {
            "instruction": "LTR",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Load task register"
        },
        {
            "instruction": "STR",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Store task register"
        },
        {
            "instruction": "XSAVE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Save processor extended states to memory"
        },
        {
            "instruction": "XSAVES",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Save processor extended states supervisor"
        },
        {
            "instruction": "XSAVEC",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Save processor extended states with compaction"
        },
        {
            "instruction": "XSAVEOPT",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Save processor extended states to memory, optimized"
        },
        {
            "instruction": "XRSTOR",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Restore processor extended states from memory"
        },
        {
            "instruction": "XRSTORS",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Restore processor extended states supervisor"
        },
        {
            "instruction": "RDMSR",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Read model-specific register"
        },
        {
            "instruction": "WRMSR",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Write model-specific register"
        },
        {
            "instruction": "XGETBV",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Reads the state of an extended control register"
        },
        {
            "instruction": "XSETBV",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Writes the state of an extended control register"
        },
        {
            "instruction": "RDFSBASE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Reads from FS base address at any privilege level"
        },
        {
            "instruction": "WRFSBASE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Writes to FS base address at any privilege level"
        },
        {
            "instruction": "RDGSBASE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Reads from GS base address at any privilege level"
        },
        {
            "instruction": "WRGSBASE",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Writes to GS base address at any privilege level"
        },
        {
            "instruction": "VERR",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Verify segment for reading"
        },
        {
            "instruction": "VERW",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Verify segment for writing"
        },
        {
            "instruction": "MOV",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Load and store control registers"
        },
        {
            "instruction": "MOV",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Load and store debug registers"
        },
        {
            "instruction": "LAR",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Load access rights"
        },
        {
            "instruction": "LSL",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Load segment limit"
        },
        {
            "instruction": "RDPMC",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Read performance monitoring counter"
        },
        {
            "instruction": "RDTSC",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Read time stamp counter"
        },
        {
            "instruction": "RDTSCP",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Read time stamp counter and processor ID"
        },
        {
            "instruction": "CLTS",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Clear the task-switched flag"
        },
        {
            "instruction": "ARPL",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Adjust requested privilege level"
        },
        {
            "instruction": "INVD",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Invalidate cache, no write back"
        },
        {
            "instruction": "WBINVD",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Invalidate cache, with write back"
        },
        {
            "instruction": "INVLPG",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Invalidate TLB entry"
        },
        {
            "instruction": "INVPCID",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Invalidate process-context identifier"
        },
        {
            "instruction": "LOCK",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Lock bus (prefix)"
        },
        {
            "instruction": "HLT",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Halt processor"
        },
        {
            "instruction": "SYSENTER",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Fast system call, transfers to a flat protected mode kernel at CPL = 0"
        },
        {
            "instruction": "SYSEXIT",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Fast system call, transfers to a flat protected mode kernel at CPL = 3"
        },
        {
            "instruction": "SYSCALL",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Fast call to privilege level 0 system procedures"
        },
        {
            "instruction": "SYSRET",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Return from fast system call"
        },
        {
            "instruction": "RSM",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Return from system management mode (SMM)"
        },
        {
            "instruction": "SWAPGS",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Exchanges current GS base register value with value in MSR address 0xC0000102"
        },
        {
            "instruction": "RDPKRU",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Read protection key rights for user pages"
        },
        {
            "instruction": "WRPKRU",
            "category": "Central Processing Unit (CPU) instructions set",
            "group": "System Instructions",
            "description": "Write data to user page key register"
        },
        {
            "instruction": "FILD",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Load integer"
        },
        {
            "instruction": "FIST",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Store integer"
        },
        {
            "instruction": "FISTP",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Store integer and pop"
        },
        {
            "instruction": "FISTTP",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Behaves like the FISTP instruction but uses truncation, irrespective of the rounding mode specified in the floating-point control word (FCW)"
        },
        {
            "instruction": "FBLD",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Load BCD"
        },
        {
            "instruction": "FBSTP",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Store BCD and pop"
        },
        {
            "instruction": "FLD",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Load floating-point value"
        },
        {
            "instruction": "FST",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Store floating-point value"
        },
        {
            "instruction": "FSTP",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Store floating-point value and pop"
        },
        {
            "instruction": "FXCH",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Exchange register"
        },
        {
            "instruction": "FCMOVE",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Floating-point conditional move if equal"
        },
        {
            "instruction": "FCMOVB",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Floating-point conditional move if below"
        },
        {
            "instruction": "FCMOVBE",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Floating-point conditional move if below or equal"
        },
        {
            "instruction": "FCMOVU",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Floating-point conditional move if unordered"
        },
        {
            "instruction": "FCMOVNE",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Floating-point conditional move if not equal"
        },
        {
            "instruction": "FCMOVNB",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Floating-point conditional move if not below"
        },
        {
            "instruction": "FCMOVNBE",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Floating-point conditional move if not below or equal"
        },
        {
            "instruction": "FCMOVNU",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Floating-point conditional move if not unordered"
        },
        {
            "instruction": "FIADD",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Add integer"
        },
        {
            "instruction": "FISUB",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Subtract integer"
        },
        {
            "instruction": "FISUBR",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Subtract integer reverse"
        },
        {
            "instruction": "FIMUL",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Multiply integer"
        },
        {
            "instruction": "FIDIV",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Divide integer"
        },
        {
            "instruction": "FIDIVR",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Divide integer reverse"
        },
        {
            "instruction": "FADD",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Add floating-point"
        },
        {
            "instruction": "FADDP",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Add floating-point and pop"
        },
        {
            "instruction": "FSUB",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Subtract floating-point"
        },
        {
            "instruction": "FSUBP",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Subtract floating-point and pop"
        },
        {
            "instruction": "FSUBR",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Subtract floating-point reverse"
        },
        {
            "instruction": "FSUBRP",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Subtract floating-point reverse and pop"
        },
        {
            "instruction": "FMUL",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Multiply floating-point"
        },
        {
            "instruction": "FMULP",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Multiply floating-point and pop"
        },
        {
            "instruction": "FDIV",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Divide floating-point"
        },
        {
            "instruction": "FDIVP",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Divide floating-point and pop"
        },
        {
            "instruction": "FDIVR",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Divide floating-point reverse"
        },
        {
            "instruction": "FDIVRP",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Divide floating-point reverse and pop"
        },
        {
            "instruction": "FPREM",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Partial remainder"
        },
        {
            "instruction": "FPREM1",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "IEEE Partial remainder"
        },
        {
            "instruction": "FRNDINT",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Round to integer"
        },
        {
            "instruction": "FABS",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Absolute value"
        },
        {
            "instruction": "FCHS",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Change sign"
        },
        {
            "instruction": "FSQRT",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Square root"
        },
        {
            "instruction": "FSCALE",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Scale by power of two"
        },
        {
            "instruction": "FXTRACT",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Basic Arithmetic Instructions",
            "description": "Extract exponent and significant"
        },
        {
            "instruction": "FSIN",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Transcendental Instructions",
            "description": "Sine"
        },
        {
            "instruction": "FCOS",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Transcendental Instructions",
            "description": "Cosine"
        },
        {
            "instruction": "FSINCOS",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Transcendental Instructions",
            "description": "Sine and cosine"
        },
        {
            "instruction": "FPTAN",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Transcendental Instructions",
            "description": "Partial tangent"
        },
        {
            "instruction": "FPATAN",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Transcendental Instructions",
            "description": "Partial arctangent"
        },
        {
            "instruction": "F2XM1",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Transcendental Instructions",
            "description": "2x \u00e2\u0088\u0092 1"
        },
        {
            "instruction": "FYL2X",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Transcendental Instructions",
            "description": "y * log2(x)"
        },
        {
            "instruction": "FYL2XP1",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Transcendental Instructions",
            "description": "y * log2(x+1)"
        },
        {
            "instruction": "FLDZ",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Load Constants Instructions",
            "description": "Load +0.0"
        },
        {
            "instruction": "FLD1",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Load Constants Instructions",
            "description": "Load +1.0"
        },
        {
            "instruction": "FLDPI",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Load Constants Instructions",
            "description": "Load Pi"
        },
        {
            "instruction": "FLDL2E",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Load Constants Instructions",
            "description": "Load log2(e)"
        },
        {
            "instruction": "FLDLN2",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Load Constants Instructions",
            "description": "Load loge(2)"
        },
        {
            "instruction": "FLDL2T",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Load Constants Instructions",
            "description": "Load log2(10)"
        },
        {
            "instruction": "FLDLG2",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Load Constants Instructions",
            "description": "Load log10(2)"
        },
        {
            "instruction": "FICOM",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare integer"
        },
        {
            "instruction": "FICOMP",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare integer and pop"
        },
        {
            "instruction": "FCOM",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare floating-point"
        },
        {
            "instruction": "FCOMP",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare floating-point and pop"
        },
        {
            "instruction": "FCOMPP",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare floating-point and pop twice"
        },
        {
            "instruction": "FCOMI",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare floating-point and set EFLAGS"
        },
        {
            "instruction": "FCOMIP",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare floating-point, set EFLAGS, and pop"
        },
        {
            "instruction": "FUCOM",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Comparison Instructions",
            "description": "Unordered compare floating-point"
        },
        {
            "instruction": "FUCOMP",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Comparison Instructions",
            "description": "Unordered compare floating-point and pop"
        },
        {
            "instruction": "FUCOMPP",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Comparison Instructions",
            "description": "Unordered compare floating-point and pop twice"
        },
        {
            "instruction": "FUCOMI",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Comparison Instructions",
            "description": "Unordered compare floating-point and set EFLAGS"
        },
        {
            "instruction": "FUCOMIP",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Comparison Instructions",
            "description": "Unordered compare floating-point, set EFLAGS, and pop"
        },
        {
            "instruction": "FTST",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Comparison Instructions",
            "description": "Test floating-point (compare with 0.0)"
        },
        {
            "instruction": "FXAM",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Comparison Instructions",
            "description": "Examine floating-point"
        },
        {
            "instruction": "FFREE",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Control Instructions",
            "description": "Free floating-point register"
        },
        {
            "instruction": "FINCSTP",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Control Instructions",
            "description": "Increment FPU register stack pointer"
        },
        {
            "instruction": "FDECSTP",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Control Instructions",
            "description": "Decrement FPU register stack pointer"
        },
        {
            "instruction": "FINIT",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Control Instructions",
            "description": "Initialize FPU after checking error conditions"
        },
        {
            "instruction": "FNINIT",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Control Instructions",
            "description": "Initialize FPU without checking error conditions"
        },
        {
            "instruction": "FSTSW",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Control Instructions",
            "description": "Store FPU status word after checking error conditions"
        },
        {
            "instruction": "FNSTSW",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Control Instructions",
            "description": "Store FPU status word without checking error conditions"
        },
        {
            "instruction": "FCLEX",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Control Instructions",
            "description": "Clear floating-point exception flags after checking for error conditions"
        },
        {
            "instruction": "FNCLEX",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Control Instructions",
            "description": "Clear floating-point exception flags without checking for error conditions"
        },
        {
            "instruction": "FSTCW",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Control Instructions",
            "description": "Store FPU control word after checking error conditions"
        },
        {
            "instruction": "FNSTCW",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Control Instructions",
            "description": "Store FPU control word without checking error conditions"
        },
        {
            "instruction": "FLDCW",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Control Instructions",
            "description": "Load FPU control word"
        },
        {
            "instruction": "FSAVE",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Control Instructions",
            "description": "Save FPU state after checking error conditions"
        },
        {
            "instruction": "FNSAVE",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Control Instructions",
            "description": "Save FPU state without checking error conditions"
        },
        {
            "instruction": "FRSTOR",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Control Instructions",
            "description": "Restore FPU state"
        },
        {
            "instruction": "FSTENV",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Control Instructions",
            "description": "Store FPU environment after checking error conditions"
        },
        {
            "instruction": "FNSTENV",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Control Instructions",
            "description": "Store FPU environment without checking error conditions"
        },
        {
            "instruction": "FLDENV",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Control Instructions",
            "description": "Load FPU environment"
        },
        {
            "instruction": "FNOP",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Control Instructions",
            "description": "FPU no operation"
        },
        {
            "instruction": "FWAIT",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "Control Instructions",
            "description": "Wait for FPU"
        },
        {
            "instruction": "FXSAVE",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "FPU and SIMD State Management Instructions",
            "description": "Save x87 FPU and SIMD state"
        },
        {
            "instruction": "FXRSTOR",
            "category": "Floating-Point Unit (FPU) instructions set",
            "group": "FPU and SIMD State Management Instructions",
            "description": "Restore x87 FPU and SIMD state"
        },
        {
            "instruction": "VZEROALL",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "AVX Initialization Instructions",
            "description": "Zero all YMM registers"
        },
        {
            "instruction": "VZEROUPPER",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "AVX Initialization Instructions",
            "description": "Zero upper bits of all YMM registers"
        },
        {
            "instruction": "VMOVD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move double word"
        },
        {
            "instruction": "VMOVQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move quad word"
        },
        {
            "instruction": "VMOVDQA",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move aligned double quad words"
        },
        {
            "instruction": "VMOVDQA32",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move aligned packed double word integer values using writemask"
        },
        {
            "instruction": "VMOVDQA64",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move aligned packed quad word integer values using writemask"
        },
        {
            "instruction": "VMOVDQU",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move unaligned double quad words"
        },
        {
            "instruction": "VMOVDQU8",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move unaligned packed byte integer values using writemask"
        },
        {
            "instruction": "VMOVDQU16",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move unaligned packed word integer values using writemask"
        },
        {
            "instruction": "VMOVDQU32",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move unaligned packed double word integer values using writemask"
        },
        {
            "instruction": "VMOVDQU64",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move unaligned packed quad word integer values using writemask"
        },
        {
            "instruction": "VMOVSLDUP",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Loads/moves 128 bits duplicating the first and third 32-bit data elements"
        },
        {
            "instruction": "VMOVSHDUP",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Loads/moves 128 bits duplicating the second and fourth 32-bit data elements"
        },
        {
            "instruction": "VMOVDDUP",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Loads/moves 128 bits duplicating the lower 64-bit data elements"
        },
        {
            "instruction": "VPMASKMOVD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional SIMD integer packed loads and stores of double word values"
        },
        {
            "instruction": "VPMASKMOVQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional SIMD integer packed loads and stores of quad word values"
        },
        {
            "instruction": "VPMOVMSKB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move byte mask"
        },
        {
            "instruction": "VPALIGNR",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Concatenate destination and source operands, extract byte aligned result shifted to the right by constant value"
        },
        {
            "instruction": "VALIGND",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Shift right and merge vectors with double word granularity using immediate shift value"
        },
        {
            "instruction": "VALIGNQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Shift right and merge vectors with quad word granularity using immediate shift value"
        },
        {
            "instruction": "VMOVSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move scalar single-precision floating-point value between YMM registers or between an YMM register and memory"
        },
        {
            "instruction": "VMOVAPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move four aligned packed single-precision floating-point values between YMM registers or between and YMM register and memory"
        },
        {
            "instruction": "VMOVUPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move four unaligned packed single-precision floating-point values between YMM registers or between and YMM register and memory"
        },
        {
            "instruction": "VMOVLPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move two packed single-precision floating-point values to the low quad word of an YMM register and memory"
        },
        {
            "instruction": "VMOVHPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move two packed single-precision floating-point values to the high quad word of an YMM register and memory"
        },
        {
            "instruction": "VMOVLHPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move two packed single-precision floating-point values from the low quad word to the high quad word of another YMM register"
        },
        {
            "instruction": "VMOVHLPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move two packed single-precision floating-point values from the high quad word to the low quad word of another YMM register"
        },
        {
            "instruction": "VMASKMOVPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional SIMD packed loads and stores of single-precision floating-point values"
        },
        {
            "instruction": "VMOVMSKPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Extract sign mask from four packed single-precision floating-point value"
        },
        {
            "instruction": "VMOVSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move scalar double-precision floating-point value between YMM registers or between an YMM register and memory"
        },
        {
            "instruction": "VMOVAPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move two aligned packed double-precision floating-point values between YMM registers or between and YMM register and memory"
        },
        {
            "instruction": "VMOVUPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move two unaligned packed double-precision floating-point values between YMM registers or between and YMM register and memory"
        },
        {
            "instruction": "VMOVLPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move low packed double-precision floating-point value to the low quad word of an YMM register and memory"
        },
        {
            "instruction": "VMOVHPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Move high packed double-precision floating-point value to the high quad word of an YMM register and memory"
        },
        {
            "instruction": "VMASKMOVPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Conditional SIMD packed loads and stores of double-precision floating-point values"
        },
        {
            "instruction": "VMOVMSKPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Data Transfer Instructions",
            "description": "Extract sign mask from two packed double-precision floating-point value"
        },
        {
            "instruction": "VPBROADCASTB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Broadcast Instructions",
            "description": "Broadcast a byte integer value to all elements of a register"
        },
        {
            "instruction": "VPBROADCASTMB2Q",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Broadcast Instructions",
            "description": "Broadcast byte size mask to all elements of a register"
        },
        {
            "instruction": "VPBROADCASTW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Broadcast Instructions",
            "description": "Broadcast a word integer value to all elements of a register"
        },
        {
            "instruction": "VPBROADCASTMW2D",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Broadcast Instructions",
            "description": "Broadcast word size mask to all elements of a register"
        },
        {
            "instruction": "VPBROADCASTD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Broadcast Instructions",
            "description": "Broadcast a double word integer value to all elements of a register"
        },
        {
            "instruction": "VBROADCASTI32X2",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Broadcast Instructions",
            "description": "Broadcast two double word values to all elements of a register"
        },
        {
            "instruction": "VBROADCASTI32X4",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Broadcast Instructions",
            "description": "Broadcast four double word values to all elements of a register"
        },
        {
            "instruction": "VBROADCASTI32X8",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Broadcast Instructions",
            "description": "Broadcast eight double word values to all elements of a register"
        },
        {
            "instruction": "VPBROADCASTQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Broadcast Instructions",
            "description": "Broadcast a quad word integer value to all elements of a register"
        },
        {
            "instruction": "VBROADCASTI64X2",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Broadcast Instructions",
            "description": "Broadcast two quad word values to all elements of a register"
        },
        {
            "instruction": "VBROADCASTI64X4",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Broadcast Instructions",
            "description": "Broadcast four quad word values to all elements of a register"
        },
        {
            "instruction": "VBROADCASTSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Broadcast Instructions",
            "description": "Broadcast a single-precision floating-point value to all elements of a register"
        },
        {
            "instruction": "VBROADCASTF32X2",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Broadcast Instructions",
            "description": "Broadcast two single-precision floating-point values to all elements of a register"
        },
        {
            "instruction": "VBROADCASTF32X4",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Broadcast Instructions",
            "description": "Broadcast four single-precision floating-point values to all elements of a register"
        },
        {
            "instruction": "VBROADCASTF32X8",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Broadcast Instructions",
            "description": "Broadcast eight single-precision floating-point values to all elements of a register"
        },
        {
            "instruction": "VBROADCASTSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Broadcast Instructions",
            "description": "Broadcast a double-precision floating-point value to all elements of a register"
        },
        {
            "instruction": "VBROADCASTF64X2",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Broadcast Instructions",
            "description": "Broadcast two double-precision floating-point values to all elements of a register"
        },
        {
            "instruction": "VBROADCASTF64X4",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Broadcast Instructions",
            "description": "Broadcast four double-precision floating-point values to all elements of a register"
        },
        {
            "instruction": "VPEXPANDD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Expand Instructions",
            "description": "Load sparse packed double word integer values from dense memory"
        },
        {
            "instruction": "VPEXPANDQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Expand Instructions",
            "description": "Load sparse packed quad word integer values from dense memory"
        },
        {
            "instruction": "VEXPANDPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Expand Instructions",
            "description": "Load sparse packed single-precision floating-point values from dense memory"
        },
        {
            "instruction": "VEXPANDPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Expand Instructions",
            "description": "Load sparse packed double-precision floating-point values from dense memory"
        },
        {
            "instruction": "VPCOMPRESSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Compress Instructions",
            "description": "Store sparse packed double word integer values into dense memory"
        },
        {
            "instruction": "VPCOMPRESSQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Compress Instructions",
            "description": "Store sparse packed quad word integer values into dense memory"
        },
        {
            "instruction": "VCOMPRESSPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Compress Instructions",
            "description": "Store sparse packed single-precision floating-point values into dense memory"
        },
        {
            "instruction": "VCOMPRESSPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Compress Instructions",
            "description": "Store sparse packed double-precision floating-point values into dense memory"
        },
        {
            "instruction": "VPINSRB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Insert Instructions",
            "description": "Insert a byte value from a register or memory into an YMM register"
        },
        {
            "instruction": "VPINSRW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Insert Instructions",
            "description": "Insert a word value from a register or memory into an YMM register"
        },
        {
            "instruction": "VPINSRD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Insert Instructions",
            "description": "Insert a double word value from register or memory into an YMM register"
        },
        {
            "instruction": "VPINSRQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Insert Instructions",
            "description": "Insert a quad word value from register or memory into an YMM register"
        },
        {
            "instruction": "VINSERTI128",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Insert Instructions",
            "description": "Insert 128-bits of packed integer values from the source into the destination operand"
        },
        {
            "instruction": "VINSERTI32X4",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Insert Instructions",
            "description": "Insert 128-bits of packed integer values from the source into the destination operand at 128-bit granular offset. The remaining portions of the destination operand are copied from the corresponding fields of the first source operand"
        },
        {
            "instruction": "VINSERTI64X2",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Insert Instructions",
            "description": "Insert 128-bits of packed integer values from the source into the destination operand at 128-bit granular offset. The remaining portions of the destination operand are copied from the corresponding fields of the first source operand"
        },
        {
            "instruction": "VINSERTI32X8",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Insert Instructions",
            "description": "Insert 256-bits of packed integer values from the source into the destination operand at 256-bit granular offset. The remaining portions of the destination operand are copied from the corresponding fields of the first source operand"
        },
        {
            "instruction": "VINSERTI64X4",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Insert Instructions",
            "description": "Insert 256-bits of packed integer values from the source into the destination operand at 256-bit granular offset. The remaining portions of the destination operand are copied from the corresponding fields of the first source operand"
        },
        {
            "instruction": "VINSERTPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Insert Instructions",
            "description": "Inserts a single-precision floating-point value from either a 32-bit memory location or selected from a specified offset in an YMM register to a specified offset in the destination YMM register. In addition, INSERTPS allows zeroing out selected data elements in the destination, using a mask"
        },
        {
            "instruction": "VINSERTF128",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Insert Instructions",
            "description": "Insert 128-bits of packed floating-point values from the source into the destination operand"
        },
        {
            "instruction": "VINSERTF32X4",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Insert Instructions",
            "description": "Insert 128-bits of packed floating-point values from the source into the destination operand at 128-bit granular offset. The remaining portions of the destination operand are copied from the corresponding fields of the first source operand"
        },
        {
            "instruction": "VINSERTF64X2",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Insert Instructions",
            "description": "Insert 128-bits of packed floating-point values from the source into the destination operand at 128-bit granular offset. The remaining portions of the destination operand are copied from the corresponding fields of the first source operand"
        },
        {
            "instruction": "VINSERTF32X8",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Insert Instructions",
            "description": "Insert 256-bits of packed floating-point values from the source into the destination operand at 256-bit granular offset. The remaining portions of the destination operand are copied from the corresponding fields of the first source operand"
        },
        {
            "instruction": "VINSERTF64X4",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Insert Instructions",
            "description": "Insert 256-bits of packed floating-point values from the source into the destination operand at 256-bit granular offset. The remaining portions of the destination operand are copied from the corresponding fields of the first source operand"
        },
        {
            "instruction": "VPEXTRB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Extract Instructions",
            "description": "Extract a byte from an YMM register and insert the value into a general-purpose register or memory"
        },
        {
            "instruction": "VPEXTRW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Extract Instructions",
            "description": "Extract a word from an YMM register and insert the value into a general-purpose register or memory"
        },
        {
            "instruction": "VPEXTRD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Extract Instructions",
            "description": "Extract a double word from an YMM register and insert the value into a general-purpose register or memory"
        },
        {
            "instruction": "VPEXTRQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Extract Instructions",
            "description": "Extract a quad word from an YMM register and insert the value into a general-purpose register or memory"
        },
        {
            "instruction": "VEXTRACTI128",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Extract Instructions",
            "description": "Extract 128-bits of packed integer values from the source operand and store to the low 128-bit of the destination operand"
        },
        {
            "instruction": "VEXTRACTI32X4",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Extract Instructions",
            "description": "Extract 128-bits of packed integer values from the source operand and store to the low 128-bit of the destination operand at 128-bit granular offset"
        },
        {
            "instruction": "VEXTRACTI64X2",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Extract Instructions",
            "description": "Extract 128-bits of packed integer values from the source operand and store to the low 128-bit of the destination operand at 128-bit granular offset"
        },
        {
            "instruction": "VEXTRACTI32X8",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Extract Instructions",
            "description": "Extract 256-bits of packed integer values from the source operand and store to the low 256-bit of the destination operand at 256-bit granular offset"
        },
        {
            "instruction": "VEXTRACTI64X4",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Extract Instructions",
            "description": "Extract 256-bits of packed integer values from the source operand and store to the low 256-bit of the destination operand at 256-bit granular offset"
        },
        {
            "instruction": "VEXTRACTPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Extract Instructions",
            "description": "Extracts a single-precision floating-point value from a specified offset in an YMM register and stores the result to memory or a general-purpose register"
        },
        {
            "instruction": "VEXTRACTF128",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Extract Instructions",
            "description": "Extract 128-bits of packed floating-point values from the source operand and store to the low 128-bit of the destination operand"
        },
        {
            "instruction": "VEXTRACTF32X4",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Extract Instructions",
            "description": "Extract 128-bits of packed floating-point values from the source operand and store to the low 128-bit of the destination operand at 128-bit granular offset"
        },
        {
            "instruction": "VEXTRACTF64X2",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Extract Instructions",
            "description": "Extract 128-bits of packed floating-point values from the source operand and store to the low 128-bit of the destination operand at 128-bit granular offset"
        },
        {
            "instruction": "VEXTRACTF32X8",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Extract Instructions",
            "description": "Extract 256-bits of packed floating-point values from the source operand and store to the low 256-bit of the destination operand at 256-bit granular offset"
        },
        {
            "instruction": "VEXTRACTF64X4",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Extract Instructions",
            "description": "Extract 256-bits of packed floating-point values from the source operand and store to the low 256-bit of the destination operand at 256-bit granular offset"
        },
        {
            "instruction": "VPGATHERDD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Gather Instructions",
            "description": "Gather packed double word values using signed double word indices"
        },
        {
            "instruction": "VPGATHERQD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Gather Instructions",
            "description": "Gather packed double word values using signed quad word indices"
        },
        {
            "instruction": "VPGATHERDQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Gather Instructions",
            "description": "Gather packed quad word values using signed double word indices"
        },
        {
            "instruction": "VPGATHERQQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Gather Instructions",
            "description": "Gather packed quad word values using signed quad word indices"
        },
        {
            "instruction": "VGATHERDPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Gather Instructions",
            "description": "Gather packed single-precision floating-point values using signed double word indices"
        },
        {
            "instruction": "VGATHERQPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Gather Instructions",
            "description": "Gather packed single-precision floating-point values using signed quad word indices"
        },
        {
            "instruction": "VGATHERPF0DPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Gather Instructions",
            "description": "Sparse prefetch of packed single-precision floating-point values with signed double word indices using T0 hint"
        },
        {
            "instruction": "VGATHERPF1DPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Gather Instructions",
            "description": "Sparse prefetch of packed single-precision floating-point values with signed double word indices using T1 hint"
        },
        {
            "instruction": "VGATHERPF0QPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Gather Instructions",
            "description": "Sparse prefetch of packed single-precision floating-point values with signed quad word indices using T0 hint"
        },
        {
            "instruction": "VGATHERPF1QPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Gather Instructions",
            "description": "Sparse prefetch of packed single-precision floating-point values with signed quad word indices using T1 hint"
        },
        {
            "instruction": "VGATHERDPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Gather Instructions",
            "description": "Gather packed double-precision floating-point values using signed double word indices"
        },
        {
            "instruction": "VGATHERQPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Gather Instructions",
            "description": "Gather packed double-precision floating-point values using signed quad word indices"
        },
        {
            "instruction": "VGATHERPF0DPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Gather Instructions",
            "description": "Sparse prefetch of packed double-precision floating-point values with signed double word indices using T0 hint"
        },
        {
            "instruction": "VGATHERPF1DPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Gather Instructions",
            "description": "Sparse prefetch of packed double-precision floating-point values with signed double word indices using T1 hint"
        },
        {
            "instruction": "VGATHERPF0QPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Gather Instructions",
            "description": "Sparse prefetch of packed double-precision floating-point values with signed quad word indices using T0 hint"
        },
        {
            "instruction": "VGATHERPF1QPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Gather Instructions",
            "description": "Sparse prefetch of packed double-precision floating-point values with signed quad word indices using T1 hint"
        },
        {
            "instruction": "VPSCATTERDD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Scatter Instructions",
            "description": "Using signed double word indices, scatter double word values to memory using writemask"
        },
        {
            "instruction": "VPSCATTERQD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Scatter Instructions",
            "description": "Using signed quad word indices, scatter double word values to memory using writemask"
        },
        {
            "instruction": "VPSCATTERDQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Scatter Instructions",
            "description": "Using signed double word indices, scatter quad word values to memory using writemask"
        },
        {
            "instruction": "VPSCATTERQQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Scatter Instructions",
            "description": "Using signed quad word indices, scatter quad word values to memory using writemask"
        },
        {
            "instruction": "VSCATTERDPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Scatter Instructions",
            "description": "Using signed double word indices, scatter single-precision floating-point values to memory using writemask"
        },
        {
            "instruction": "VSCATTERQPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Scatter Instructions",
            "description": "Using signed quad word indices, scatter single-precision floating-point values to memory using writemask"
        },
        {
            "instruction": "VSCATTERPF0DPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Scatter Instructions",
            "description": "Using signed double word indices, prefetch sparse single-precision floating-point values using writemask and T0 hint with intent to write"
        },
        {
            "instruction": "VSCATTERPF1DPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Scatter Instructions",
            "description": "Using signed double word indices, prefetch sparse single-precision floating-point value using writemask and T1 hint with intent to write"
        },
        {
            "instruction": "VSCATTERPF0QPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Scatter Instructions",
            "description": "Using signed quad word indices, prefetch sparse single-precision floating-point values using writemask and T0 hint with intent to write"
        },
        {
            "instruction": "VSCATTERPF1QPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Scatter Instructions",
            "description": "Using signed quad word indices, prefetch sparse single-precision floating-point value using writemask and T1 hint with intent to write"
        },
        {
            "instruction": "VSCATTERDPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Scatter Instructions",
            "description": "Using signed double word indices, scatter double-precision floating-point values to memory using writemask"
        },
        {
            "instruction": "VSCATTERQPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Scatter Instructions",
            "description": "Using signed quad word indices, scatter double-precision floating-point values to memory using writemask"
        },
        {
            "instruction": "VSCATTERPF0DPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Scatter Instructions",
            "description": "Using signed double word indices, prefetch sparse double-precision floating-point values using writemask and T0 hint with intent to write"
        },
        {
            "instruction": "VSCATTERPF1QPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Scatter Instructions",
            "description": "Using signed double word indices, prefetch sparse double-precision floating-point value using writemask and T1 hint with intent to write"
        },
        {
            "instruction": "VSCATTERPF0QPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Scatter Instructions",
            "description": "Using signed quad word indices, prefetch sparse double-precision floating-point values using writemask and T0 hint with intent to write"
        },
        {
            "instruction": "VSCATTERPF1DPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Scatter Instructions",
            "description": "Using signed quad word indices, prefetch sparse double-precision floating-point value using writemask and T1 hint with intent to write"
        },
        {
            "instruction": "VPBLENDVB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Blending Instructions",
            "description": "Conditionally copies specified byte elements in the source operand to the destination, using an implied mask"
        },
        {
            "instruction": "VPBLENDMB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Blending Instructions",
            "description": "Performs blending of byte elements between the first and the second operand (register or memory), using the instruction mask selector"
        },
        {
            "instruction": "VPBLENDW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Blending Instructions",
            "description": "Conditionally copies specified word elements in the source operand to the destination, using an immediate byte control"
        },
        {
            "instruction": "VPBLENDMW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Blending Instructions",
            "description": "Performs blending of word elements between the first and the second operand (register or memory), using the instruction mask selector"
        },
        {
            "instruction": "VPBLENDD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Blending Instructions",
            "description": "Conditionally copies specified double word elements in the source operand to the destination, using an immediate byte control"
        },
        {
            "instruction": "VPBLENDMD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Blending Instructions",
            "description": "Performs blending of double word elements between the first and the second operand (register or memory), using the instruction mask selector"
        },
        {
            "instruction": "VPBLENDMQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Blending Instructions",
            "description": "Performs blending of quad word elements between the first and the second operand (register or memory), using the instruction mask selector"
        },
        {
            "instruction": "VBLENDPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Blending Instructions",
            "description": "Conditionally copies specified data elements in the source operand to the destination, using an immediate byte control"
        },
        {
            "instruction": "VBLENDVPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Blending Instructions",
            "description": "Conditionally copies specified data elements in the source operand to the destination, using an implied mask"
        },
        {
            "instruction": "VBLENDMPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Blending Instructions",
            "description": "Performs blending between single-precision elements in the first operand with the elements in the second operand using an opmask register as select control"
        },
        {
            "instruction": "VBLENDPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Blending Instructions",
            "description": "Conditionally copies specified data elements in the source operand to the destination, using an immediate byte control"
        },
        {
            "instruction": "VBLENDVPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Blending Instructions",
            "description": "Conditionally copies specified data elements in the source operand to the destination, using an implied mask"
        },
        {
            "instruction": "VBLENDMPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Blending Instructions",
            "description": "Performs blending between double-precision elements in the first operand with the elements in the second operand using an opmask register as select control"
        },
        {
            "instruction": "VPSHUFB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shuffle Instructions",
            "description": "Shuffle packed byte values"
        },
        {
            "instruction": "VPSHUFLW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shuffle Instructions",
            "description": "Shuffle packed low words values"
        },
        {
            "instruction": "VPSHUFHW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shuffle Instructions",
            "description": "Shuffle packed high words values"
        },
        {
            "instruction": "VPSHUFD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shuffle Instructions",
            "description": "Shuffle packed double words values"
        },
        {
            "instruction": "VSHUFI32X4",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shuffle Instructions",
            "description": "Shuffle 128-bit packed double word values"
        },
        {
            "instruction": "VSHUFI64X2",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shuffle Instructions",
            "description": "Shuffle 128-bit packed quad word values"
        },
        {
            "instruction": "VSHUFPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shuffle Instructions",
            "description": "Shuffles values in packed single-precision floating-point operands"
        },
        {
            "instruction": "VSHUFF32X4",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shuffle Instructions",
            "description": "Shuffle 128-bit packed single-precision floating-point operands"
        },
        {
            "instruction": "VSHUFPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shuffle Instructions",
            "description": "Shuffles values in packed double-precision floating-point operands"
        },
        {
            "instruction": "VSHUFF64X2",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shuffle Instructions",
            "description": "Shuffle 128-bit packed double-precision floating-point operands"
        },
        {
            "instruction": "VPERMW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Permute Instructions",
            "description": "Permute packed word elements"
        },
        {
            "instruction": "VPERMI2W",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Permute Instructions",
            "description": "Permute packed word elements from two tables using indexes"
        },
        {
            "instruction": "VPERMD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Permute Instructions",
            "description": "Permute packed double word elements"
        },
        {
            "instruction": "VPERMI2D",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Permute Instructions",
            "description": "Permute packed double word elements from two tables using indexes"
        },
        {
            "instruction": "VPERMQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Permute Instructions",
            "description": "Permute packed quad word elements"
        },
        {
            "instruction": "VPERMI2Q",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Permute Instructions",
            "description": "Permute packed quad word elements from two tables using indexes"
        },
        {
            "instruction": "VPERM2I128",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Permute Instructions",
            "description": "Permute 128-bit integer fields using controls"
        },
        {
            "instruction": "VPERMPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Permute Instructions",
            "description": "Permute packed single-precision floating-point elements"
        },
        {
            "instruction": "VPERMILPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Permute Instructions",
            "description": "Permute packed single-precision floating-point elements using controls"
        },
        {
            "instruction": "VPERMI2PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Permute Instructions",
            "description": "Permute packed single-precision elements from two tables using indexes"
        },
        {
            "instruction": "VPERMPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Permute Instructions",
            "description": "Permute packed double-precision floating-point elements"
        },
        {
            "instruction": "VPERMILPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Permute Instructions",
            "description": "Permute packed double-precision floating-point elements using controls"
        },
        {
            "instruction": "VPERMI2PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Permute Instructions",
            "description": "Permute packed double-precision elements from two tables using indexes"
        },
        {
            "instruction": "VPERM2F128",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Permute Instructions",
            "description": "Permute 128-bit floating-point fields using controls"
        },
        {
            "instruction": "VPUNPCKLBW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Unpack Instructions",
            "description": "Unpack low-order bytes"
        },
        {
            "instruction": "VPUNPCKHBW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Unpack Instructions",
            "description": "Unpack high-order bytes"
        },
        {
            "instruction": "VPUNPCKLWD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Unpack Instructions",
            "description": "Unpack low-order words"
        },
        {
            "instruction": "VPUNPCKHWD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Unpack Instructions",
            "description": "Unpack high-order words"
        },
        {
            "instruction": "VPUNPCKLDQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Unpack Instructions",
            "description": "Unpack low-order double words"
        },
        {
            "instruction": "VPUNPCKHDQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Unpack Instructions",
            "description": "Unpack high-order double words"
        },
        {
            "instruction": "VPUNPCKLQDQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Unpack Instructions",
            "description": "Unpack low quad words"
        },
        {
            "instruction": "VPUNPCKHQDQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Unpack Instructions",
            "description": "Unpack high quad words"
        },
        {
            "instruction": "VUNPCKLPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Unpack Instructions",
            "description": "Unpacks and interleaves the two low-order values from two single-precision floating-point operands"
        },
        {
            "instruction": "VUNPCKHPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Unpack Instructions",
            "description": "Unpacks and interleaves the two high-order values from two single-precision floating-point operands"
        },
        {
            "instruction": "VUNPCKLPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Unpack Instructions",
            "description": "Unpacks and interleaves the low values from two packed double-precision floating-point operands"
        },
        {
            "instruction": "VUNPCKHPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Unpack Instructions",
            "description": "Unpacks and interleaves the high values from two packed double-precision floating-point operands"
        },
        {
            "instruction": "VPACKSSWB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Pack Instructions",
            "description": "Pack words into bytes with signed saturation"
        },
        {
            "instruction": "VPACKUSWB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Pack Instructions",
            "description": "Pack words into bytes with unsigned saturation"
        },
        {
            "instruction": "VPACKSSDW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Pack Instructions",
            "description": "Pack double words into words with signed saturation"
        },
        {
            "instruction": "VPACKUSDW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Pack Instructions",
            "description": "Pack double words into words with unsigned saturation"
        },
        {
            "instruction": "VPMOVSXBW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Sign extend the lower 8-bit integer of each packed word element into packed signed word integers"
        },
        {
            "instruction": "VPMOVZXBW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Zero extend the lower 8-bit integer of each packed word element into packed signed word integers"
        },
        {
            "instruction": "VPMOVSXBD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Sign extend the lower 8-bit integer of each packed double word element into packed signed double word integers"
        },
        {
            "instruction": "VPMOVZXBD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Zero extend the lower 8-bit integer of each packed double word element into packed signed double word integers"
        },
        {
            "instruction": "VPMOVSXBQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Sign extend the lower 8-bit integer of each packed quad word element into packed signed quad word integers"
        },
        {
            "instruction": "VPMOVZXBQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Zero extend the lower 8-bit integer of each packed quad word element into packed signed quad word integers"
        },
        {
            "instruction": "VPMOVWB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Converts packed word integers into packed bytes with truncation"
        },
        {
            "instruction": "VPMOVSWB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Converts packed signed word integers into packed signed bytes using signed saturation"
        },
        {
            "instruction": "VPMOVUSWB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Converts packed unsigned word integers into packed unsigned bytes using unsigned saturation"
        },
        {
            "instruction": "VPMOVSXWD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Sign extend the lower 16-bit integer of each packed double word element into packed signed double word integers"
        },
        {
            "instruction": "VPMOVZXWD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Zero extend the lower 16-bit integer of each packed double word element into packed signed double word integers"
        },
        {
            "instruction": "VPMOVSXWQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Sign extend the lower 16-bit integer of each packed quad word element into packed signed quad word integers"
        },
        {
            "instruction": "VPMOVZXWQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Zero extend the lower 16-bit integer of each packed quad word element into packed signed quad word integers"
        },
        {
            "instruction": "VPMOVDB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Converts packed double word integers into packed bytes with truncation"
        },
        {
            "instruction": "VPMOVSDB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Converts packed signed double word integers into packed signed bytes using signed saturation"
        },
        {
            "instruction": "VPMOVUSDB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Converts packed unsigned double word integers into packed unsigned bytes using unsigned saturation"
        },
        {
            "instruction": "VPMOVDW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Converts packed double word integers into packed words with truncation"
        },
        {
            "instruction": "VPMOVSDW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Converts packed signed double word integers into packed signed words using signed saturation"
        },
        {
            "instruction": "VPMOVUSDW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Converts packed unsigned double word integers into packed unsigned words using unsigned saturation"
        },
        {
            "instruction": "VPMOVSXDQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Sign extend the lower 32-bit integer of each packed quad word element into packed signed quad word integers"
        },
        {
            "instruction": "VPMOVZXDQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Zero extend the lower 32-bit integer of each packed quad word element into packed signed quad word integers"
        },
        {
            "instruction": "VPMOVQB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Converts packed quad word integers into packed bytes with truncation"
        },
        {
            "instruction": "VPMOVSQB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Converts packed signed quad word integers into packed signed bytes using signed saturation"
        },
        {
            "instruction": "VPMOVUSQB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Converts packed unsigned quad word integers into packed unsigned bytes using unsigned saturation"
        },
        {
            "instruction": "VPMOVQW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Converts packed quad word integers into packed words with truncation"
        },
        {
            "instruction": "VPMOVSQW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Converts packed signed quad word integers into packed signed words using signed saturation"
        },
        {
            "instruction": "VPMOVUSQW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Converts packed unsigned quad word integers into packed unsigned words using unsigned saturation"
        },
        {
            "instruction": "VPMOVQD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Converts packed quad word integers into packed double words with truncation"
        },
        {
            "instruction": "VPMOVSQD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Converts packed signed quad word integers into packed signed double words using signed saturation"
        },
        {
            "instruction": "VPMOVUSQD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Converts packed unsigned quad word integers into packed unsigned double words using unsigned saturation"
        },
        {
            "instruction": "VCVTSI2SS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert scalar signed double word integer to scalar single-precision floating-point value"
        },
        {
            "instruction": "VCVTUSI2SS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert scalar unsigned double word integer to scalar single-precision floating-point value"
        },
        {
            "instruction": "VCVTDQ2PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert packed signed double word integers to packed single-precision floating-point values"
        },
        {
            "instruction": "VCVTUDQ2PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert packed unsigned double word integers to packed single-precision floating-point values"
        },
        {
            "instruction": "VCVTSI2SD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert scalar signed double word integer to scalar double-precision floating-point value"
        },
        {
            "instruction": "VCVTUSI2SD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert scalar unsigned double word integer to scalar double-precision floating-point value"
        },
        {
            "instruction": "VCVTDQ2PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert packed signed double word integers to packed double-precision floating-point values"
        },
        {
            "instruction": "VCVTUDQ2PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert packed unsigned double word integers to packed double-precision floating-point values"
        },
        {
            "instruction": "VCVTSI2SS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert scalar signed quad word integer to scalar single-precision floating-point value"
        },
        {
            "instruction": "VCVTUSI2SS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert scalar unsigned quad word integer to scalar single-precision floating-point value"
        },
        {
            "instruction": "VCVTQQ2PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert packed signed quad word integers to packed single-precision floating-point values"
        },
        {
            "instruction": "VCVTUQQ2PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert packed unsigned quad word integers to packed single-precision floating-point values"
        },
        {
            "instruction": "VCVTSI2SD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert scalar signed quad word integer to scalar double-precision floating-point value"
        },
        {
            "instruction": "VCVTUSI2SD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert scalar unsigned quad word integer to scalar double-precision floating-point value"
        },
        {
            "instruction": "VCVTQQ2PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert packed signed quad word integers to packed double-precision floating-point values"
        },
        {
            "instruction": "VCVTUQQ2PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert packed unsigned quad word integers to packed double-precision floating-point values"
        },
        {
            "instruction": "VCVTPH2PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert eight/four data element containing 16-bit floating-point data into eight/four single-precision floating-point data"
        },
        {
            "instruction": "VCVTSS2SI",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert scalar single-precision floating-point value to scalar signed double word integer"
        },
        {
            "instruction": "VCVTSS2USI",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert scalar single-precision floating-point value to scalar unsigned double word integer"
        },
        {
            "instruction": "VCVTPS2DQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert packed single-precision floating-point values to packed signed double word integers"
        },
        {
            "instruction": "VCVTPS2UDQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert packed single-precision floating-point values to packed unsigned double word integers"
        },
        {
            "instruction": "VCVTTSS2SI",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert with truncation scalar single-precision floating-point value to scalar signed double word integer"
        },
        {
            "instruction": "VCVTTSS2USI",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert with truncation scalar single-precision floating-point value to scalar unsigned double word integer"
        },
        {
            "instruction": "VCVTTPS2DQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert with truncation packed single-precision floating-point values to packed signed double word integers"
        },
        {
            "instruction": "VCVTTPS2UDQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert with truncation packed single-precision floating-point values to packed unsigned double word integers"
        },
        {
            "instruction": "VCVTSS2SI",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert scalar single-precision floating-point value to scalar signed quad word integer"
        },
        {
            "instruction": "VCVTSS2USI",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert scalar single-precision floating-point value to scalar unsigned quad word integer"
        },
        {
            "instruction": "VCVTPS2QQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert packed single-precision floating-point values to packed signed quad word integers"
        },
        {
            "instruction": "VCVTPS2UQQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert packed single precision floating-point values to packed unsigned quad word integers"
        },
        {
            "instruction": "VCVTTSS2SI",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert with truncation scalar single-precision floating-point value to scalar signed quad word integer"
        },
        {
            "instruction": "VCVTTSS2USI",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert with truncation scalar single-precision floating-point value to scalar unsigned quad word integer"
        },
        {
            "instruction": "VCVTTPS2QQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert with truncation packed single precision floating-point values to packed signed quad word integers"
        },
        {
            "instruction": "VCVTTPS2UQQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert with truncation packed single precision floating-point values to packed unsigned quad word integers"
        },
        {
            "instruction": "VCVTPS2PH",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert eight/four data element containing single-precision floating-point data into eight/four 16-bit floating-point data"
        },
        {
            "instruction": "VCVTSS2SD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert scalar single-precision floating-point value to scalar double-precision floating-point value"
        },
        {
            "instruction": "VCVTPS2PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert packed single-precision floating-point values to packed double-precision floating-point values"
        },
        {
            "instruction": "VCVTSD2SI",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert scalar double-precision floating-point value to scalar signed double word integer"
        },
        {
            "instruction": "VCVTSD2USI",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert scalar double-precision floating-point value to scalar unsigned double word integer"
        },
        {
            "instruction": "VCVTPD2DQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert packed double-precision floating-point values to packed signed double word integers"
        },
        {
            "instruction": "VCVTPD2UDQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert packed double-precision floating-point values to packed unsigned double word integers"
        },
        {
            "instruction": "VCVTTSD2SI",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert with truncation scalar double-precision floating-point value to scalar signed double word integer"
        },
        {
            "instruction": "VCVTTSD2USI",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert with truncation scalar double-precision floating-point value to scalar unsigned double word integer"
        },
        {
            "instruction": "VCVTTPD2DQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert with truncation packed double-precision floating-point values to packed signed double word integers"
        },
        {
            "instruction": "VCVTTPD2UDQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert with truncation packed double-precision floating-point values to packed unsigned double word integers"
        },
        {
            "instruction": "VCVTSD2SI",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert scalar double-precision floating-point value to scalar signed quad word integer"
        },
        {
            "instruction": "VCVTSD2USI",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert scalar double-precision floating-point value to scalar unsigned quad word integer"
        },
        {
            "instruction": "VCVTPD2QQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert packed double-precision floating-point values to packed signed quad word integers"
        },
        {
            "instruction": "VCVTPD2UQQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert packed double-precision floating-point values to packed unsigned quad word integers"
        },
        {
            "instruction": "VCVTTSD2SI",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert with truncation scalar double-precision floating-point value to scalar signed quad word integer"
        },
        {
            "instruction": "VCVTTSD2USI",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert with truncation scalar double-precision floating-point value to scalar unsigned quad word integer"
        },
        {
            "instruction": "VCVTTPD2QQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert with truncation packed double-precision floating-point values to packed signed quad word integers"
        },
        {
            "instruction": "VCVTTPD2UQQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert with truncation packed double-precision floating-point values to packed unsigned quad word integers"
        },
        {
            "instruction": "VCVTSD2SS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert scalar double-precision floating-point value to scalar single-precision floating-point value"
        },
        {
            "instruction": "VCVTPD2PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Conversion Instructions",
            "description": "Convert packed double-precision floating-point values to packed single-precision floating-point values"
        },
        {
            "instruction": "VPTESTMB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Performs a bitwise logical AND of packed byte integers and set mask"
        },
        {
            "instruction": "VPTESTNMB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Performs a bitwise logical NOT AND of packed byte integers and set mask"
        },
        {
            "instruction": "VPTESTMW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Performs a bitwise logical AND of packed word integers and set mask"
        },
        {
            "instruction": "VPTESTNMW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Performs a bitwise logical NOT AND of packed word integers and set mask"
        },
        {
            "instruction": "VPTESTMD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Performs a bitwise logical AND of packed double word integers and set mask"
        },
        {
            "instruction": "VPTESTNMD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Performs a bitwise logical NOT AND of packed double word integers and set mask"
        },
        {
            "instruction": "VPANDD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Bitwise logical AND of packed double word integers"
        },
        {
            "instruction": "VPANDND",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Bitwise logical AND NOT of packed double word integers"
        },
        {
            "instruction": "VPORD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Bitwise logical OR of packed double word integers"
        },
        {
            "instruction": "VPXORD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Bitwise logical exclusive XOR of packed double word integers"
        },
        {
            "instruction": "VPTERNLOGD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Bitwise ternary logic with double word granularity. The immediate value determines the specific binary function being implemented"
        },
        {
            "instruction": "VPTESTMQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Performs a bitwise logical AND of packed quad word integers and set mask"
        },
        {
            "instruction": "VPTESTNMQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Performs a bitwise logical NOT AND of packed quad word integers and set mask"
        },
        {
            "instruction": "VPANDQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Bitwise logical AND of packed quad word integers"
        },
        {
            "instruction": "VPANDNQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Bitwise logical AND NOT of packed quad word integers"
        },
        {
            "instruction": "VPORQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Bitwise logical OR of packed quad word integers"
        },
        {
            "instruction": "VPXORQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Bitwise logical exclusive XOR of packed quad word integers"
        },
        {
            "instruction": "VPTERNLOGQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Bitwise ternary logic with quad word granularity. The immediate value determines the specific binary function being implemented"
        },
        {
            "instruction": "VPTEST",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Performs a logical AND between the destinations with this mask and sets the ZF flag if the result is zero. The CF flag (zero for TEST) is set if the inverted mask AND with the destination is all zero"
        },
        {
            "instruction": "VPAND",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Bitwise logical AND"
        },
        {
            "instruction": "VPANDN",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Bitwise logical AND NOT"
        },
        {
            "instruction": "VPOR",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Bitwise logical OR"
        },
        {
            "instruction": "VPXOR",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Bitwise logical exclusive OR"
        },
        {
            "instruction": "VTESTPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Packed bit test of single-precision floating-point elements"
        },
        {
            "instruction": "VANDPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Perform bitwise logical AND of packed single-precision floating-point values"
        },
        {
            "instruction": "VANDNPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Perform bitwise logical AND NOT of packed single-precision floating-point values"
        },
        {
            "instruction": "VORPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Perform bitwise logical OR of packed single-precision floating-point values"
        },
        {
            "instruction": "VXORPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Perform bitwise logical XOR of packed single-precision floating-point values"
        },
        {
            "instruction": "VTESTPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Packed bit test of double-precision floating-point elements"
        },
        {
            "instruction": "VANDPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Perform bitwise logical AND of packed double-precision floating-point values"
        },
        {
            "instruction": "VANDNPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Perform bitwise logical AND NOT of packed double-precision floating-point values"
        },
        {
            "instruction": "VORPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Perform bitwise logical OR of packed double-precision floating-point values"
        },
        {
            "instruction": "VXORPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Logical Instructions",
            "description": "Perform bitwise logical XOR of packed double-precision floating-point values"
        },
        {
            "instruction": "VPSLLW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Shift packed words left logical"
        },
        {
            "instruction": "VPSRLW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Shift packed words right logical"
        },
        {
            "instruction": "VPSRAW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Shift packed words right arithmetic"
        },
        {
            "instruction": "VPSLLVW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Variable bit shift left logical"
        },
        {
            "instruction": "VPSRLVW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Variable bit shift right logical"
        },
        {
            "instruction": "VPSRAVW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Variable bit shift right arithmetic"
        },
        {
            "instruction": "VPSLLD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Shift packed double words left logical"
        },
        {
            "instruction": "VPSRLD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Shift packed double words right logical"
        },
        {
            "instruction": "VPSRAD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Shift packed double words right arithmetic"
        },
        {
            "instruction": "VPSLLVD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Variable bit shift left logical"
        },
        {
            "instruction": "VPSRLVD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Variable bit shift right logical"
        },
        {
            "instruction": "VPSRAVD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Variable bit shift right arithmetic"
        },
        {
            "instruction": "VPROLD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Rotate double words left using immediate bits count"
        },
        {
            "instruction": "VPRORD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Rotate double words right using immediate bits count"
        },
        {
            "instruction": "VPROLVD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Rotate double words left using variable bits count"
        },
        {
            "instruction": "VPRORVD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Rotate double words right using variable bits count"
        },
        {
            "instruction": "VPSLLQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Shift packed quad word left logical"
        },
        {
            "instruction": "VPSRLQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Shift packed quad word right logical"
        },
        {
            "instruction": "VPSRAQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Shift packed quad words right arithmetic"
        },
        {
            "instruction": "VPSLLVQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Variable bit shift left logical"
        },
        {
            "instruction": "VPSRLVQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Variable bit shift right logical"
        },
        {
            "instruction": "VPSRAVQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Variable bit shift right arithmetic"
        },
        {
            "instruction": "VPROLQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Rotate quad words left using immediate bits count"
        },
        {
            "instruction": "VPRORQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Rotate quad words right using immediate bits count"
        },
        {
            "instruction": "VPROLVQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Rotate quad words left using variable bits count"
        },
        {
            "instruction": "VPRORVQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Rotate quad words right using variable bits count"
        },
        {
            "instruction": "VPSLLDQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Shift double quad word left logical"
        },
        {
            "instruction": "VPSRLDQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Shift and Rotate Instructions",
            "description": "Shift double quad word right logical"
        },
        {
            "instruction": "VPCMPEQB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed bytes for equal"
        },
        {
            "instruction": "VPCMPGTB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed signed byte integers for greater than"
        },
        {
            "instruction": "VPCMPB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed signed byte values into mask"
        },
        {
            "instruction": "VPCMPUB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed unsigned byte values into mask"
        },
        {
            "instruction": "VPCMPEQW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed words for equal"
        },
        {
            "instruction": "VPCMPGTW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed signed word integers for greater than"
        },
        {
            "instruction": "VPCMPW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed signed word values into mask"
        },
        {
            "instruction": "VPCMPUW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed unsigned word values into mask"
        },
        {
            "instruction": "VPCMPEQD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed double words for equal"
        },
        {
            "instruction": "VPCMPGTD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed signed double word integers for greater than"
        },
        {
            "instruction": "VPCMPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed signed double word values into mask"
        },
        {
            "instruction": "VPCMPUD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed unsigned double word values into mask"
        },
        {
            "instruction": "VPCMPEQQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed quad words for equal"
        },
        {
            "instruction": "VPCMPGTQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed signed quad word integers for greater than"
        },
        {
            "instruction": "VPCMPQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed signed quad word values into mask"
        },
        {
            "instruction": "VPCMPUQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed unsigned quad word values into mask"
        },
        {
            "instruction": "VCMPEQPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed single-precision floating-point values and set mask if destination value is equal to source value"
        },
        {
            "instruction": "VCMPLTPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed single-precision floating-point values and set mask if destination value is less than source value"
        },
        {
            "instruction": "VCMPLEPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed single-precision floating-point values and set mask if destination value is less than or equal to source value"
        },
        {
            "instruction": "VCMPGTPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed single-precision floating-point values and set mask if destination value is greater than source value"
        },
        {
            "instruction": "VCMPGEPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed single-precision floating-point values and set mask if destination value is greater than or equal to source value"
        },
        {
            "instruction": "VCMPUNORDPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed single-precision floating-point values and set mask if at least one of the two source operands is a NaN"
        },
        {
            "instruction": "VCMPNEQPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed single-precision floating-point values and set mask if destination value is not equal to source value"
        },
        {
            "instruction": "VCMPNLTPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed single-precision floating-point values and set mask if destination value is not less than source value"
        },
        {
            "instruction": "VCMPNLEPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed single-precision floating-point values and set mask if destination value is not less than or equal to source value"
        },
        {
            "instruction": "VCMPNGTPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed single-precision floating-point values and set mask if destination value is not greater than source value"
        },
        {
            "instruction": "VCMPNGEPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed single-precision floating-point values and set mask if destination value is not greater than or equal to source value"
        },
        {
            "instruction": "VCMPORDPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed single-precision floating-point values and set mask if neither of both source operands is a NaN"
        },
        {
            "instruction": "VCMPEQSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare scalar single-precision floating-point values and set mask if destination value is equal to source value"
        },
        {
            "instruction": "VCMPLTSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare scalar single-precision floating-point values and set mask if destination value is less than source value"
        },
        {
            "instruction": "VCMPLESS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare scalar single-precision floating-point values and set mask if destination value is less than or equal to source value"
        },
        {
            "instruction": "VCMPGTSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare scalar single-precision floating-point values and set mask if destination value is greater than source value"
        },
        {
            "instruction": "VCMPGESS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare scalar single-precision floating-point values and set mask if destination value is greater than or equal to source value"
        },
        {
            "instruction": "VCMPUNORDSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare scalar single-precision floating-point values and set mask if at least one of the two source operands is a NaN"
        },
        {
            "instruction": "VCMPNEQSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare scalar single-precision floating-point values and set mask if destination value is not equal to source value"
        },
        {
            "instruction": "VCMPNLTSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare scalar single-precision floating-point values and set mask if destination value is not less than source value"
        },
        {
            "instruction": "VCMPNLESS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare scalar single-precision floating-point values and set mask if destination value is not less than or equal to source value"
        },
        {
            "instruction": "VCMPNGTSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare scalar single-precision floating-point values and set mask if destination value is not greater than source value"
        },
        {
            "instruction": "VCMPNGESS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare scalar single-precision floating-point values and set mask if destination value is not greater than or equal to source value"
        },
        {
            "instruction": "VCMPORDSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare scalar single-precision floating-point values and set mask if neither of both source operands is a NaN"
        },
        {
            "instruction": "VCOMISS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Perform ordered comparison of scalar single-precision floating-point value and set flags in EFLAGS register"
        },
        {
            "instruction": "VUCOMISS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Perform unordered comparison of scalar single-precision floating-point value and set flags in EFLAGS register"
        },
        {
            "instruction": "VCMPEQPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed double-precision floating-point values and set mask if destination value is equal to source value"
        },
        {
            "instruction": "VCMPLTPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed double-precision floating-point values and set mask if destination value is less than source value"
        },
        {
            "instruction": "VCMPLEPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed double-precision floating-point values and set mask if destination value is less than or equal to source value"
        },
        {
            "instruction": "VCMPGTPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed double-precision floating-point values and set mask if destination value is greater than source value"
        },
        {
            "instruction": "VCMPGEPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed double-precision floating-point values and set mask if destination value is greater than or equal to source value"
        },
        {
            "instruction": "VCMPUNORDPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed double-precision floating-point values and set mask if at least one of the two source operands is a NaN"
        },
        {
            "instruction": "VCMPNEQPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed double-precision floating-point values and set mask if destination value is not equal to source value"
        },
        {
            "instruction": "VCMPNLTPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed double-precision floating-point values and set mask if destination value is not less than source value"
        },
        {
            "instruction": "VCMPNLEPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed double-precision floating-point values and set mask if destination value is not less than or equal to source value"
        },
        {
            "instruction": "VCMPNGTPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed double-precision floating-point values and set mask if destination value is not greater than source value"
        },
        {
            "instruction": "VCMPNGEPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed double-precision floating-point values and set mask if destination value is not greater than or equal to source value"
        },
        {
            "instruction": "VCMPORDPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare packed double-precision floating-point values and set mask if neither of both source operands is a NaN"
        },
        {
            "instruction": "VCMPEQSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare scalar double-precision floating-point values and set mask if destination value is equal to source value"
        },
        {
            "instruction": "VCMPLTSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare scalar double-precision floating-point values and set mask if destination value is less than source value"
        },
        {
            "instruction": "VCMPLESD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare scalar double-precision floating-point values and set mask if destination value is less than or equal to source value"
        },
        {
            "instruction": "VCMPGTSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare scalar double-precision floating-point values and set mask if destination value is greater than source value"
        },
        {
            "instruction": "VCMPGESD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare scalar double-precision floating-point values and set mask if destination value is greater than or equal to source value"
        },
        {
            "instruction": "VCMPUNORDSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare scalar double-precision floating-point values and set mask if at least one of the two source operands is a NaN"
        },
        {
            "instruction": "VCMPNEQSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare scalar double-precision floating-point values and set mask if destination value is not equal to source value"
        },
        {
            "instruction": "VCMPNLTSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare scalar double-precision floating-point values and set mask if destination value is not less than source value"
        },
        {
            "instruction": "VCMPNLESD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare scalar double-precision floating-point values and set mask if destination value is not less than or equal to source value"
        },
        {
            "instruction": "VCMPNGTSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare scalar double-precision floating-point values and set mask if destination value is not greater than source value"
        },
        {
            "instruction": "VCMPNGESD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare scalar double-precision floating-point values and set mask if destination value is not greater than or equal to source value"
        },
        {
            "instruction": "VCMPORDSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Compare scalar double-precision floating-point values and set mask if neither of both source operands is a NaN"
        },
        {
            "instruction": "VCOMISD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Perform ordered comparison of scalar double-precision floating-point value and set flags in EFLAGS register"
        },
        {
            "instruction": "VUCOMISD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Comparison Instructions",
            "description": "Perform unordered comparison of scalar double-precision floating-point value and set flags in EFLAGS register"
        },
        {
            "instruction": "VPADDB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Add packed byte integers"
        },
        {
            "instruction": "VPADDUSB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Add packed unsigned byte integers with unsigned saturation"
        },
        {
            "instruction": "VPADDSB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Add packed signed byte integers with signed saturation"
        },
        {
            "instruction": "VPSUBB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Subtract packed byte integers"
        },
        {
            "instruction": "VPSUBUSB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Subtract packed unsigned byte integers with unsigned saturation"
        },
        {
            "instruction": "VPSUBSB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Subtract packed signed byte integers with signed saturation"
        },
        {
            "instruction": "VPADDW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Add packed word integers"
        },
        {
            "instruction": "VPADDUSW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Add packed unsigned word integers with unsigned saturation"
        },
        {
            "instruction": "VPADDSW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Add packed signed word integers with signed saturation"
        },
        {
            "instruction": "VPHADDW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Adds two adjacent, signed 16-bit integers horizontally from the source and destination operands and packs the signed 16-bit results to the destination operand"
        },
        {
            "instruction": "VPHADDSW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Adds two adjacent, signed 16-bit integers horizontally from the source and destination operands and packs the signed, saturated 16-bit results to the destination operand"
        },
        {
            "instruction": "VPSUBW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Subtract packed word integers"
        },
        {
            "instruction": "VPSUBUSW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Subtract packed unsigned word integers with unsigned saturation"
        },
        {
            "instruction": "VPSUBSW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Subtract packed signed word integers with signed saturation"
        },
        {
            "instruction": "VPHSUBW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Performs horizontal subtraction on each adjacent pair of 16-bit signed integers by subtracting the most significant word from the least significant word of each pair in the source and destination operands. The signed 16-bit results are packed and written to the destination operand"
        },
        {
            "instruction": "VPHSUBSW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Performs horizontal subtraction on each adjacent pair of 16-bit signed integers by subtracting the most significant word from the least significant word of each pair in the source and destination operands. The signed, saturated 16-bit results are packed and written to the destination operand"
        },
        {
            "instruction": "VPMULHUW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Multiply packed unsigned integers and store high result"
        },
        {
            "instruction": "VPMULLW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Multiply packed signed word integers and store low result"
        },
        {
            "instruction": "VPMULHW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Multiply packed signed word integers and store high result"
        },
        {
            "instruction": "VPMULHRSW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Multiplies vertically each signed 16-bit integer from the destination operand with the corresponding signed 16-bit integer of the source operand, producing intermediate, signed 32-bit integers. Each intermediate 32-bit integer is truncated to the 18 most significant bits. Rounding is always performed by adding 1 to the least significant bit of the 18-bit intermediate result. The final result is obtained by selecting the 16 bits immediately to the right of the most significant bit of each 18-bit intermediate result and packed to the destination operand"
        },
        {
            "instruction": "VPMADDUBSW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Multiplies each unsigned byte value with the corresponding signed byte value to produce an intermediate, 16-bit signed integer. Each adjacent pair of 16-bit signed values are added horizontally. The signed, saturated 16-bit results are packed to the destination operand"
        },
        {
            "instruction": "VPADDD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Add packed double word integers"
        },
        {
            "instruction": "VPHADDD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Adds two adjacent, signed 32-bit integers horizontally from the source and destination operands and packs the signed 32-bit results to the destination operand"
        },
        {
            "instruction": "VPSUBD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Subtract packed double word integers"
        },
        {
            "instruction": "VPHSUBD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Performs horizontal subtraction on each adjacent pair of 32-bit signed integers by subtracting the most significant double word from the least significant double word of each pair in the source and destination operands. The signed 32-bit results are packed and written to the destination operand"
        },
        {
            "instruction": "VPMULLD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Returns four lower 32-bits of the 64-bit results of signed 32-bit integer multiplies"
        },
        {
            "instruction": "VPMADDWD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Multiply and add packed word integers"
        },
        {
            "instruction": "VPADDQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Add packed quad word integers"
        },
        {
            "instruction": "VPSUBQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Subtract packed quad word integers"
        },
        {
            "instruction": "VPMULUDQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Multiply packed unsigned double word integers"
        },
        {
            "instruction": "VPMULDQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Returns two 64-bit signed result of signed 32-bit integer multiplies"
        },
        {
            "instruction": "VPMULLQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Returns two lower 64-bits of the 128-bit results of signed 64-bit integer multiplies"
        },
        {
            "instruction": "VADDSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Add scalar single-precision floating-point value"
        },
        {
            "instruction": "VADDPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Add packed single-precision floating-point values"
        },
        {
            "instruction": "VHADDPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Performs a single-precision addition on contiguous data elements. The first data element of the result is obtained by adding the first and second elements of the first operand; the second element by adding the third and fourth elements of the first operand; the third by adding the first and second elements of the second operand; and the fourth by adding the third and fourth elements of the second operand"
        },
        {
            "instruction": "VSUBSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Subtract scalar single-precision floating-point value"
        },
        {
            "instruction": "VSUBPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Subtract packed single-precision floating-point values"
        },
        {
            "instruction": "VHSUBPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Performs a single-precision subtraction on contiguous data elements. The first data element of the result is obtained by subtracting the second element of the first operand from the first element of the first operand; the second element by subtracting the fourth element of the first operand from the third element of the first operand; the third by subtracting the second element of the second operand from the first element of the second operand; and the fourth by subtracting the fourth element of the second operand from the third element of the second operand"
        },
        {
            "instruction": "VADDSUBPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Performs single-precision addition on the second and fourth pairs of 32-bit data elements within the operands; single-precision subtraction on the first and third pairs"
        },
        {
            "instruction": "VMULSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Multiply scalar single-precision floating-point value"
        },
        {
            "instruction": "VMULPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Multiply packed single-precision floating-point values"
        },
        {
            "instruction": "VDIVSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Divide scalar single-precision floating-point value"
        },
        {
            "instruction": "VDIVPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Divide packed single-precision floating-point values"
        },
        {
            "instruction": "VADDSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Add scalar double precision floating-point value"
        },
        {
            "instruction": "VADDPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Add packed double-precision floating-point values"
        },
        {
            "instruction": "VHADDPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Performs a double-precision addition on contiguous data elements. The first data element of the result is obtained by adding the first and second elements of the first operand; the second element by adding the first and second elements of the second operand"
        },
        {
            "instruction": "VSUBSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Subtract scalar double-precision floating-point value"
        },
        {
            "instruction": "VSUBPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Subtract scalar double-precision floating-point value"
        },
        {
            "instruction": "VHSUBPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Performs a double-precision subtraction on contiguous data elements. The first data element of the result is obtained by subtracting the second element of the first operand from the first element of the first operand; the second element by subtracting the second element of the second operand from the first element of the second operand"
        },
        {
            "instruction": "VADDSUBPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Performs double-precision addition on the second pair of quad words, and double-precision subtraction on the first pair"
        },
        {
            "instruction": "VMULSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Multiply scalar double-precision floating-point value"
        },
        {
            "instruction": "VMULPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Multiply packed double-precision floating-point values"
        },
        {
            "instruction": "VDIVSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Divide scalar double-precision floating-point value"
        },
        {
            "instruction": "VDIVPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Packed Arithmetic Instructions",
            "description": "Divide packed double-precision floating-point values"
        },
        {
            "instruction": "VFMADD132SS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-add of scalar single-precision floating-point values"
        },
        {
            "instruction": "VFMADD213SS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-add of scalar single-precision floating-point values"
        },
        {
            "instruction": "VFMADD231SS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-add of scalar single-precision floating-point values"
        },
        {
            "instruction": "VFMADD132PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-add of packed single-precision floating-point values"
        },
        {
            "instruction": "VFMADD213PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-add of packed single-precision floating-point values"
        },
        {
            "instruction": "VFMADD231PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-add of packed single-precision floating-point values"
        },
        {
            "instruction": "VFNMADD132SS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused negative multiply-add of scalar single-precision floating-point values"
        },
        {
            "instruction": "VFNMADD213SS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused negative multiply-add of scalar single-precision floating-point values"
        },
        {
            "instruction": "VFNMADD231SS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused negative multiply-add of scalar single-precision floating-point values"
        },
        {
            "instruction": "VFNMADD132PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused negative multiply-add of packed single-precision floating-point values"
        },
        {
            "instruction": "VFNMADD213PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused negative multiply-add of packed single-precision floating-point values"
        },
        {
            "instruction": "VFNMADD231PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused negative multiply-add of packed single-precision floating-point values"
        },
        {
            "instruction": "VFMSUB132SS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-subtract of scalar single-precision floating-point values"
        },
        {
            "instruction": "VFMSUB213SS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-subtract of scalar single-precision floating-point values"
        },
        {
            "instruction": "VFMSUB231SS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-subtract of scalar single-precision floating-point values"
        },
        {
            "instruction": "VFMSUB132PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-subtract of packed single-precision floating-point values"
        },
        {
            "instruction": "VFMSUB213PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-subtract of packed single-precision floating-point values"
        },
        {
            "instruction": "VFMSUB231PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-subtract of packed single-precision floating-point values"
        },
        {
            "instruction": "VFNMSUB132SS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused negative multiply-subtract of scalar single-precision floating-point values"
        },
        {
            "instruction": "VFNMSUB213SS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused negative multiply-subtract of scalar single-precision floating-point values"
        },
        {
            "instruction": "VFNMSUB231SS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused negative multiply-subtract of scalar single-precision floating-point values"
        },
        {
            "instruction": "VFNMSUB132PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused negative multiply-subtract of packed single-precision floating-point values"
        },
        {
            "instruction": "VFNMSUB213PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused negative multiply-subtract of packed single-precision floating-point values"
        },
        {
            "instruction": "VFNMSUB231PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused negative multiply-subtract of packed single-precision floating-point values"
        },
        {
            "instruction": "VFMADDSUB132PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-alternating add/subtract of packed single-precision floating-point values"
        },
        {
            "instruction": "VFMADDSUB213PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-alternating add/subtract of packed single-precision floating-point values"
        },
        {
            "instruction": "VFMADDSUB231PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-alternating add/subtract of packed single-precision floating-point values"
        },
        {
            "instruction": "VFMSUBADD132PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-alternating subtract/add of packed single-precision floating-point values"
        },
        {
            "instruction": "VFMSUBADD213PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-alternating subtract/add of packed single-precision floating-point values"
        },
        {
            "instruction": "VFMSUBADD231PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-alternating subtract/add of packed single-precision floating-point values"
        },
        {
            "instruction": "VFMADD132SD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-add of scalar double-precision floating-point values"
        },
        {
            "instruction": "VFMADD213SD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-add of scalar double-precision floating-point values"
        },
        {
            "instruction": "VFMADD231SD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-add of scalar double-precision floating-point values"
        },
        {
            "instruction": "VFMADD132PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-add of packed double-precision floating-point values"
        },
        {
            "instruction": "VFMADD213PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-add of packed double-precision floating-point values"
        },
        {
            "instruction": "VFMADD231PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-add of packed double-precision floating-point values"
        },
        {
            "instruction": "VFNMADD132SD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused negative multiply-add of scalar double-precision floating-point values"
        },
        {
            "instruction": "VFNMADD213SD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused negative multiply-add of scalar double-precision floating-point values"
        },
        {
            "instruction": "VFNMADD231SD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused negative multiply-add of scalar double-precision floating-point values"
        },
        {
            "instruction": "VFNMADD132PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused negative multiply-add of packed double-precision floating-point values"
        },
        {
            "instruction": "VFNMADD213PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused negative multiply-add of packed double-precision floating-point values"
        },
        {
            "instruction": "VFNMADD231PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused negative multiply-add of packed double-precision floating-point values"
        },
        {
            "instruction": "VFMSUB132SD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-subtract of scalar double-precision floating-point values"
        },
        {
            "instruction": "VFMSUB213SD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-subtract of scalar double-precision floating-point values"
        },
        {
            "instruction": "VFMSUB231SD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-subtract of scalar double-precision floating-point values"
        },
        {
            "instruction": "VFMSUB132PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-subtract of packed double-precision floating-point values"
        },
        {
            "instruction": "VFMSUB213PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-subtract of packed double-precision floating-point values"
        },
        {
            "instruction": "VFMSUB231PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-subtract of packed double-precision floating-point values"
        },
        {
            "instruction": "VFNMSUB132SD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused negative multiply-subtract of scalar double-precision floating-point values"
        },
        {
            "instruction": "VFNMSUB213SD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused negative multiply-subtract of scalar double-precision floating-point values"
        },
        {
            "instruction": "VFNMSUB231SD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused negative multiply-subtract of scalar double-precision floating-point values"
        },
        {
            "instruction": "VFNMSUB132PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused negative multiply-subtract of packed double-precision floating-point values"
        },
        {
            "instruction": "VFNMSUB213PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused negative multiply-subtract of packed double-precision floating-point values"
        },
        {
            "instruction": "VFNMSUB231PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused negative multiply-subtract of packed double-precision floating-point values"
        },
        {
            "instruction": "VFMADDSUB132PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-alternating add/subtract of packed double-precision floating-point values"
        },
        {
            "instruction": "VFMADDSUB213PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-alternating add/subtract of packed double-precision floating-point values"
        },
        {
            "instruction": "VFMADDSUB231PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-alternating add/subtract of packed double-precision floating-point values"
        },
        {
            "instruction": "VFMSUBADD132PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-alternating subtract/add of packed double-precision floating-point values"
        },
        {
            "instruction": "VFMSUBADD213PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-alternating subtract/add of packed double-precision floating-point values"
        },
        {
            "instruction": "VFMSUBADD231PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Fused Arithmetic Instructions",
            "description": "Fused multiply-alternating subtract/add of packed double-precision floating-point values"
        },
        {
            "instruction": "VPABSB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Computes the absolute value of each signed byte data element"
        },
        {
            "instruction": "VPSIGNB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Negates each signed integer element of the destination operand if the sign of the corresponding element in the source operand is less than zero"
        },
        {
            "instruction": "VPAVGB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Compute average of packed unsigned byte integers"
        },
        {
            "instruction": "VPMINUB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Minimum of packed unsigned byte integers"
        },
        {
            "instruction": "VPMINSB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Minimum of packed signed byte integers"
        },
        {
            "instruction": "VPMAXUB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Maximum of packed unsigned byte integers"
        },
        {
            "instruction": "VPMAXSB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Maximum of packed signed byte integers"
        },
        {
            "instruction": "VPSADBW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Compute sum of absolute differences"
        },
        {
            "instruction": "VMPSADBW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Performs eight 4-byte wide Sum of Absolute Differences operations to produce eight word integers"
        },
        {
            "instruction": "VDBPSADBW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Double block packed Sum of Absolute Differences on unsigned bytes"
        },
        {
            "instruction": "VPABSW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Computes the absolute value of each signed 16-bit data element"
        },
        {
            "instruction": "VPSIGNW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Negates each signed integer element of the destination operand if the sign of the corresponding element in the source operand is less than zero"
        },
        {
            "instruction": "VPAVGW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Compute average of packed unsigned word integers"
        },
        {
            "instruction": "VPMINUW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Minimum of packed unsigned word integers"
        },
        {
            "instruction": "VPMINSW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Minimum of packed signed word integers"
        },
        {
            "instruction": "VPMAXUW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Maximum of packed unsigned word integers"
        },
        {
            "instruction": "VPMAXSW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Maximum of packed signed word integers"
        },
        {
            "instruction": "VPHMINPOSUW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Finds the value and location of the minimum unsigned word from one of 8 horizontally packed unsigned words. The resulting value and location (offset within the source) are packed into the low double word of the destination YMM register"
        },
        {
            "instruction": "VPABSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Computes the absolute value of each signed 32-bit data element"
        },
        {
            "instruction": "VPSIGND",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Negates each signed integer element of the destination operand if the sign of the corresponding element in the source operand is less than zero"
        },
        {
            "instruction": "VPMINUD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Minimum of packed unsigned double word integers"
        },
        {
            "instruction": "VPMINSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Minimum of packed signed double word integers"
        },
        {
            "instruction": "VPMAXUD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Maximum of packed unsigned double word integers"
        },
        {
            "instruction": "VPMAXSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Maximum of packed signed double word integers"
        },
        {
            "instruction": "VPLZCNTD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Count the number of leading zero bits in each packed double word element"
        },
        {
            "instruction": "VPCONFLICTD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Detect conflicts within a vector of packed double word values into dense memory"
        },
        {
            "instruction": "VPABSQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Computes the absolute value of each signed 64-bit data element"
        },
        {
            "instruction": "VPMINUQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Minimum of packed unsigned quad word integers"
        },
        {
            "instruction": "VPMINSQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Minimum of packed signed quad word integers"
        },
        {
            "instruction": "VPMAXUQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Maximum of packed unsigned quad word integers"
        },
        {
            "instruction": "VPMAXSQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Maximum of packed signed quad word integers"
        },
        {
            "instruction": "VPLZCNTQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Count the number of leading zero bits in each packed quad word element"
        },
        {
            "instruction": "VPCONFLICTQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Detect conflicts within a vector of packed quad word values into dense memory"
        },
        {
            "instruction": "VSQRTSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Compute square root of scalar single-precision floating-point value"
        },
        {
            "instruction": "VSQRTPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Compute square roots of packed single-precision floating-point values"
        },
        {
            "instruction": "VMINSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Return minimum scalar single-precision floating-point value"
        },
        {
            "instruction": "VMINPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Return minimum packed single-precision floating-point values"
        },
        {
            "instruction": "VMAXSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Return maximum scalar single-precision floating-point value"
        },
        {
            "instruction": "VMAXPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Return maximum packed single-precision floating-point values"
        },
        {
            "instruction": "VROUNDSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Round the low packed single precision floating-point value into an integer value and return a rounded floating-point value"
        },
        {
            "instruction": "VROUNDPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Round packed single precision floating-point values into integer values and return rounded floating-point values"
        },
        {
            "instruction": "VRNDSCALESS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Round scalar single-precision floating-point value to include a given number of fraction bits"
        },
        {
            "instruction": "VRNDSCALEPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Round packed single-precision floating-point values to include a given number of fraction bits"
        },
        {
            "instruction": "VDPPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Perform single-precision dot products for up to 4 elements and broadcast"
        },
        {
            "instruction": "VRANGESS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Range restriction calculation for pairs of scalar single-precision floating-point values"
        },
        {
            "instruction": "VRANGEPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Range restriction calculation for packed pairs of single-precision floating-point values"
        },
        {
            "instruction": "VREDUCESS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Perform a reduction transformation on a scalar single-precision floating-point value by subtracting a number of fraction bits"
        },
        {
            "instruction": "VREDUCEPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Perform reduction transformation on packed single-precision floating-point values by subtracting a number of fraction bits"
        },
        {
            "instruction": "VGETEXPSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Convert the biased exponent of scalar single-precision floating-point value to floating-point value representing unbiased integer exponent"
        },
        {
            "instruction": "VGETEXPPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Convert the biased exponent of packed single-precision floating-point values to floating-point values representing unbiased integer exponent"
        },
        {
            "instruction": "VGETMANTSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Extract the normalized mantissa from scalar single-precision floating-point value"
        },
        {
            "instruction": "VGETMANTPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Extract the normalized mantissa from packed single-precision floating-point values"
        },
        {
            "instruction": "VSCALEFSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Scale scalar single-precision floating-point value"
        },
        {
            "instruction": "VSCALEFPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Scale packed single-precision floating-point values"
        },
        {
            "instruction": "VEXP2PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Approximation to the exponential 2^x of packed single-precision floating-point values with less than 2^-23 relative error"
        },
        {
            "instruction": "VFPCLASSSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Tests scalar single-precision floating-point value for the following categories: NaN, +0, -0, +Inf, -Inf, denormal, finite, negative"
        },
        {
            "instruction": "VFPCLASSPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Tests packed single-precision floating-point values for the following categories: NaN, +0, -0, +Inf, -Inf, denormal, finite, negative"
        },
        {
            "instruction": "VFIXUPIMMSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Fix up special scalar single-precision floating-point value"
        },
        {
            "instruction": "VFIXUPIMMPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Fix up special packed single-precision floating-point values"
        },
        {
            "instruction": "VRCP14SS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Computes the approximate reciprocal of the scalar single-precision floating-point value. The max relative error is less than 2^-28"
        },
        {
            "instruction": "VRCP14PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Computes the approximate reciprocals of the packed single-precision floating-point values. The max relative error is less than 2^-28"
        },
        {
            "instruction": "VRCP28SS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Computes the approximate reciprocal of the scalar single-precision floating-point value. The max relative error is less than 2^-28"
        },
        {
            "instruction": "VRCP28PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Computes the approximate reciprocals of the packed single-precision floating-point values. The max relative error is less than 2^-28"
        },
        {
            "instruction": "VRSQRT14SS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Computes the approximate reciprocal square root of the scalar single-precision floating-point value. The max relative error is less than 2^-14"
        },
        {
            "instruction": "VRSQRT14PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Computes the approximate reciprocal square roots of the packed single-precision floating-point values. The max relative error is less than 2^-14"
        },
        {
            "instruction": "VRSQRT28SS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Computes the approximate reciprocal square root of the scalar single-precision floating-point value. The max relative error is less than 2^-28"
        },
        {
            "instruction": "VRSQRT28PS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Computes the approximate reciprocal square roots of the packed single-precision floating-point values. The max relative error is less than 2^-28"
        },
        {
            "instruction": "VRCPPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Compute reciprocals of packed single-precision floating-point values"
        },
        {
            "instruction": "VRCPSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Compute reciprocal of scalar single-precision floating-point value"
        },
        {
            "instruction": "VRSQRTPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Compute reciprocals of square roots of packed single-precision floating-point values"
        },
        {
            "instruction": "VRSQRTSS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Compute reciprocal of square root of scalar single-precision floating-point value"
        },
        {
            "instruction": "VSQRTSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Compute scalar square root of scalar double-precision floating-point value"
        },
        {
            "instruction": "VSQRTPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Compute packed square roots of packed double-precision floating-point values"
        },
        {
            "instruction": "VMINSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Return minimum scalar double-precision floating-point value"
        },
        {
            "instruction": "VMINPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Return minimum packed double-precision floating-point values"
        },
        {
            "instruction": "VMAXSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Return maximum scalar double-precision floating-point value"
        },
        {
            "instruction": "VMAXPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Return maximum packed double-precision floating-point values"
        },
        {
            "instruction": "VROUNDSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Round the low packed double precision floating-point value into an integer value and return a rounded floating-point value"
        },
        {
            "instruction": "VROUNDPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Round packed double precision floating-point values into integer values and return rounded floating-point values"
        },
        {
            "instruction": "VRNDSCALESD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Round scalar double-precision floating-point value to include a given number of fraction bits"
        },
        {
            "instruction": "VRNDSCALEPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Round packed double-precision floating-point values to include a given number of fraction bits"
        },
        {
            "instruction": "VDPPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Perform double-precision dot product for up to 2 elements and broadcast"
        },
        {
            "instruction": "VRANGESD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Range restriction calculation for pairs of scalar double-precision floating-point values"
        },
        {
            "instruction": "VRANGEPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Range restriction calculation for packed pairs of double-precision floating-point values"
        },
        {
            "instruction": "VREDUCESD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Perform a reduction transformation on a scalar double-precision floating-point value by subtracting a number of fraction bits"
        },
        {
            "instruction": "VREDUCEPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Perform reduction transformation on packed double-precision floating-point values by subtracting a number of fraction bits"
        },
        {
            "instruction": "VGETEXPSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Convert the biased exponent of scalar double-precision floating-point value to floating-point value representing unbiased integer exponent"
        },
        {
            "instruction": "VGETEXPPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Convert the biased exponent of packed double-precision floating-point values to floating-point values representing unbiased integer exponent"
        },
        {
            "instruction": "VGETMANTSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Extract the normalized mantissa from scalar double-precision floating-point value"
        },
        {
            "instruction": "VGETMANTPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Extract the normalized mantissa from packed double-precision floating-point values"
        },
        {
            "instruction": "VSCALEFSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Scale scalar double-precision floating-point value"
        },
        {
            "instruction": "VSCALEFPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Scale packed double-precision floating-point values"
        },
        {
            "instruction": "VEXP2PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Approximation to the exponential 2^x of packed double-precision floating-point values with less than 2^-23 relative error"
        },
        {
            "instruction": "VFPCLASSSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Tests scalar double-precision floating-point value for the following categories: NaN, +0, -0, +Inf, -Inf, denormal, finite, negative"
        },
        {
            "instruction": "VFPCLASSPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Tests packed double-precision floating-point values for the following categories: NaN, +0, -0, +Inf, -Inf, denormal, finite, negative"
        },
        {
            "instruction": "VFIXUPIMMSD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Fix up special scalar double-precision floating-point value"
        },
        {
            "instruction": "VFIXUPIMMPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Fix up special packed double-precision floating-point values"
        },
        {
            "instruction": "VRCP14SD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Computes the approximate reciprocal of the scalar double-precision floating-point value. The max relative error is less than 2^-28"
        },
        {
            "instruction": "VRCP14PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Computes the approximate reciprocals of the packed double-precision floating-point values. The max relative error is less than 2^-28"
        },
        {
            "instruction": "VRCP28SD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Computes the approximate reciprocal of the scalar double-precision floating-point value. The max relative error is less than 2^-28"
        },
        {
            "instruction": "VRCP28PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Computes the approximate reciprocals of the packed double-precision floating-point values. The max relative error is less than 2^-28"
        },
        {
            "instruction": "VRSQRT14SD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Computes the approximate reciprocal square root of the scalar double-precision floating-point value. The max relative error is less than 2^-14"
        },
        {
            "instruction": "VRSQRT14PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Computes the approximate reciprocal square roots of the packed double-precision floating-point values. The max relative error is less than 2^-14"
        },
        {
            "instruction": "VRSQRT28SD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Computes the approximate reciprocal square root of the scalar double-precision floating-point value. The max relative error is less than 2^-28"
        },
        {
            "instruction": "VRSQRT28PD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Primitives of Functions",
            "description": "Computes the approximate reciprocal square roots of the packed double-precision floating-point values. The max relative error is less than 2^-28"
        },
        {
            "instruction": "KMOVB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Move 8-bit from and to mask registers"
        },
        {
            "instruction": "KTESTB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Set ZF and CF depending on sign bit AND and ANDN of 8-bit masks"
        },
        {
            "instruction": "KORTESTB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise logical OR of two 8-bit masks with setting ZF CF accordingly"
        },
        {
            "instruction": "KNOTB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise NOT of 8-bits mask"
        },
        {
            "instruction": "KANDB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise logical AND of two 8-bit masks"
        },
        {
            "instruction": "KANDNB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise logical AND NOT of two 8-bit masks"
        },
        {
            "instruction": "KORB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise logical OR of two 8-bit masks"
        },
        {
            "instruction": "KXORB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise logical XOR of two 8-bit masks"
        },
        {
            "instruction": "KXNORB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise logical XNOR of two 8-bit masks"
        },
        {
            "instruction": "KADDB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Add two 8-bit masks"
        },
        {
            "instruction": "KSHIFTLB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Shift left 8-bit mask register"
        },
        {
            "instruction": "KSHIFTRB",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Shift right 8-bit mask register"
        },
        {
            "instruction": "KUNPCKBW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Unpack and interleave 8-bit masks"
        },
        {
            "instruction": "VPMOVM2B",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Convert a mask register to a vector register"
        },
        {
            "instruction": "VPMOVB2M",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Converts a vector register to a mask register"
        },
        {
            "instruction": "KMOVW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Move 16-bit from and to mask registers"
        },
        {
            "instruction": "KTESTW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Set ZF and CF depending on sign bit AND and ANDN of 16-bit masks"
        },
        {
            "instruction": "KORTESTW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise logical OR of two 8-bit masks with setting ZF CF accordingly"
        },
        {
            "instruction": "KNOTW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise NOT of 16-bits mask"
        },
        {
            "instruction": "KANDW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise logical AND of two 16-bit masks"
        },
        {
            "instruction": "KANDNW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise logical AND NOT of two 16-bit masks"
        },
        {
            "instruction": "KORW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise logical OR of two 16-bit masks"
        },
        {
            "instruction": "KXORW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise logical XOR of two 16-bit masks"
        },
        {
            "instruction": "KXNORW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise logical XNOR of two 16-bit masks"
        },
        {
            "instruction": "KADDW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Add two 16-bit masks"
        },
        {
            "instruction": "KSHIFTLW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Shift left 16-bit mask register"
        },
        {
            "instruction": "KSHIFTRW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Shift right 16-bit mask register"
        },
        {
            "instruction": "KUNPCKWD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Unpack and interleave 16-bit masks"
        },
        {
            "instruction": "VPMOVM2W",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Convert a mask register to a vector register"
        },
        {
            "instruction": "VPMOVW2M",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Converts a vector register to a mask register"
        },
        {
            "instruction": "KMOVD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Move 32-bit from and to mask registers"
        },
        {
            "instruction": "KTESTD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Set ZF and CF depending on sign bit AND and ANDN of 32-bit masks"
        },
        {
            "instruction": "KORTESTD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise logical OR of two 8-bit masks with setting ZF CF accordingly"
        },
        {
            "instruction": "KNOTD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise NOT of 32-bits mask"
        },
        {
            "instruction": "KANDD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise logical AND of two 32-bit masks"
        },
        {
            "instruction": "KANDND",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise logical AND NOT of two 32-bit masks"
        },
        {
            "instruction": "KORD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise logical OR of two 32-bit masks"
        },
        {
            "instruction": "KXORD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise logical XOR of two 32-bit masks"
        },
        {
            "instruction": "KXNORD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise logical XNOR of two 32-bit masks"
        },
        {
            "instruction": "KADDD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Add two 32-bit masks"
        },
        {
            "instruction": "KSHIFTLD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Shift left 32-bit mask register"
        },
        {
            "instruction": "KSHIFTRD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Shift right 32-bit mask register"
        },
        {
            "instruction": "KUNPCKDQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Unpack and interleave 32-bit masks"
        },
        {
            "instruction": "VPMOVM2D",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Convert a mask register to a vector register"
        },
        {
            "instruction": "VPMOVD2M",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Converts a vector register to a mask register"
        },
        {
            "instruction": "KMOVQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Move 64-bit from and to mask registers"
        },
        {
            "instruction": "KTESTQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Set ZF and CF depending on sign bit AND and ANDN of 64-bit masks"
        },
        {
            "instruction": "KORTESTQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise logical OR of two 8-bit masks with setting ZF CF accordingly"
        },
        {
            "instruction": "KNOTQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise NOT of 64-bits mask"
        },
        {
            "instruction": "KANDQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise logical AND of two 64-bit masks"
        },
        {
            "instruction": "KANDNQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise logical AND NOT of two 64-bit masks"
        },
        {
            "instruction": "KORQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise logical OR of two 64-bit masks"
        },
        {
            "instruction": "KXORQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise logical XOR of two 64-bit masks"
        },
        {
            "instruction": "KXNORQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Bitwise logical XNOR of two 64-bit masks"
        },
        {
            "instruction": "KADDQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Add two 64-bit masks"
        },
        {
            "instruction": "KSHIFTLQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Shift left 64-bit mask register"
        },
        {
            "instruction": "KSHIFTRQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Shift right 64-bit mask register"
        },
        {
            "instruction": "VPMOVM2Q",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Convert a mask register to a vector register"
        },
        {
            "instruction": "VPMOVQ2M",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Opmask Instructions",
            "description": "Converts a vector register to a mask register"
        },
        {
            "instruction": "VPCMPESTRI",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "String and Text Processing Instructions",
            "description": "Packed compare explicit-length strings, return index in ECX/RCX"
        },
        {
            "instruction": "VPCMPESTRM",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "String and Text Processing Instructions",
            "description": "Packed compare explicit-length strings, return mask in YMM0"
        },
        {
            "instruction": "VPCMPISTRI",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "String and Text Processing Instructions",
            "description": "Packed compare implicit-length strings, return index in ECX/RCX"
        },
        {
            "instruction": "VPCMPISTRM",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "String and Text Processing Instructions",
            "description": "Packed compare implicit-length strings, return mask in YMM0"
        },
        {
            "instruction": "SHA1RNDS4",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Secure Hash Algorithm Instructions",
            "description": "Perform four rounds of SHA1 operation"
        },
        {
            "instruction": "SHA1MSG1",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Secure Hash Algorithm Instructions",
            "description": "Perform an intermediate calculation for the next four SHA1 message double words"
        },
        {
            "instruction": "SHA1MSG2",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Secure Hash Algorithm Instructions",
            "description": "Perform a final calculation for the next four SHA1 message double words"
        },
        {
            "instruction": "SHA1NEXTE",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Secure Hash Algorithm Instructions",
            "description": "Calculate SHA1 state variable E after four founds"
        },
        {
            "instruction": "SHA256RNDS2",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Secure Hash Algorithm Instructions",
            "description": "Perform two rounds of SHA256 operation"
        },
        {
            "instruction": "SHA256MSG1",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Secure Hash Algorithm Instructions",
            "description": "Perform an intermediate calculation for the next four SHA256 message double words"
        },
        {
            "instruction": "SHA256MSG2",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Secure Hash Algorithm Instructions",
            "description": "Perform a final calculation for the next four SHA256 message double words"
        },
        {
            "instruction": "VLDMXCSR",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "State Management Instructions",
            "description": "Load MXCSR register"
        },
        {
            "instruction": "VSTMXCSR",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "State Management Instructions",
            "description": "Save MXCSR register state"
        },
        {
            "instruction": "MONITOR",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Agent Synchronization Instructions",
            "description": "Sets up an address range used to monitor write-back stores"
        },
        {
            "instruction": "MWAIT",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Agent Synchronization Instructions",
            "description": "Enables a processor to enter into an optimized state while waiting for a write-back store to the address range set up by the MONITOR instruction"
        },
        {
            "instruction": "VLDDQU",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Cacheability Control, Prefetch and Ordering Instructions",
            "description": "Special 128-bit unaligned load designed to avoid cache line splits"
        },
        {
            "instruction": "PREFETCHNTA",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Cacheability Control, Prefetch and Ordering Instructions",
            "description": "Load 32 or more of bytes from memory to a selected level of the processor\u00e2\u0080\u0099s cache hierarchy using NTA hint"
        },
        {
            "instruction": "PREFETCHT0",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Cacheability Control, Prefetch and Ordering Instructions",
            "description": "Load 32 or more of bytes from memory to a selected level of the processor\u00e2\u0080\u0099s cache hierarchy using T0 hint"
        },
        {
            "instruction": "PREFETCHT1",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Cacheability Control, Prefetch and Ordering Instructions",
            "description": "Load 32 or more of bytes from memory to a selected level of the processor\u00e2\u0080\u0099s cache hierarchy using T1 hint"
        },
        {
            "instruction": "PREFETCHT2",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Cacheability Control, Prefetch and Ordering Instructions",
            "description": "Load 32 or more of bytes from memory to a selected level of the processor\u00e2\u0080\u0099s cache hierarchy using T2 hint"
        },
        {
            "instruction": "PREFETCHW",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Cacheability Control, Prefetch and Ordering Instructions",
            "description": "Prefetch data into caches in anticipation of a write"
        },
        {
            "instruction": "PREFETCHWT1",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Cacheability Control, Prefetch and Ordering Instructions",
            "description": "Prefetch data into caches with intent to write and T1 hint"
        },
        {
            "instruction": "CLFLUSH",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Cacheability Control, Prefetch and Ordering Instructions",
            "description": "Flushes and invalidates a memory operand and its associated cache line from all levels of the processor\u00e2\u0080\u0099s cache hierarchy"
        },
        {
            "instruction": "CLFLUSHOPT",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Cacheability Control, Prefetch and Ordering Instructions",
            "description": "Flushes and invalidates a memory operand and its associated cache line from all levels of the processor\u00e2\u0080\u0099s cache hierarchy with optimized memory system throughput"
        },
        {
            "instruction": "SFENCE",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Cacheability Control, Prefetch and Ordering Instructions",
            "description": "Serializes store operations"
        },
        {
            "instruction": "LFENCE",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Cacheability Control, Prefetch and Ordering Instructions",
            "description": "Serializes load operations"
        },
        {
            "instruction": "MFENCE",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Cacheability Control, Prefetch and Ordering Instructions",
            "description": "Serializes load and store operations"
        },
        {
            "instruction": "VMASKMOVDQU",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Cacheability Control, Prefetch and Ordering Instructions",
            "description": "Non-temporal store of selected bytes from an YMM register into memory"
        },
        {
            "instruction": "VMOVNTPS",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Cacheability Control, Prefetch and Ordering Instructions",
            "description": "Non-temporal store of four packed single-precision floating-point values from an YMM register into memory"
        },
        {
            "instruction": "VMOVNTPD",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Cacheability Control, Prefetch and Ordering Instructions",
            "description": "Non-temporal store of two packed double-precision floating-point values from an YMM register into memory"
        },
        {
            "instruction": "VMOVNTDQ",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Cacheability Control, Prefetch and Ordering Instructions",
            "description": "Non-temporal store of double quad word from an YMM register into memory"
        },
        {
            "instruction": "VMOVNTDQA",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Cacheability Control, Prefetch and Ordering Instructions",
            "description": "Provides a non-temporal hint that can cause adjacent 16-byte items within an aligned 64-byte region (a streaming line) to be fetched and held in a small set of temporary buffers (\"streaming load buffers\"). Subsequent streaming loads to other aligned 16-byte items in the same streaming line may be supplied from the streaming load buffer and can improve throughput"
        },
        {
            "instruction": "MOVNTI",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Cacheability Control, Prefetch and Ordering Instructions",
            "description": "Non-temporal store of a double word from a general-purpose register into memory"
        },
        {
            "instruction": "PAUSE",
            "category": "Single Instruction Multiple Data (SIMD) instructions set",
            "group": "Cacheability Control, Prefetch and Ordering Instructions",
            "description": "Improves the performance of \"spin-wait loops\""
        },
        {
            "instruction": "VAESENC",
            "category": "Advanced Encryption Standard (AES) instructions set",
            "group": "Advanced Encryption Standard (AES) instructions set",
            "description": "Perform an AES encryption round using an 128-bit state and a round key"
        },
        {
            "instruction": "VAESDEC",
            "category": "Advanced Encryption Standard (AES) instructions set",
            "group": "Advanced Encryption Standard (AES) instructions set",
            "description": "Perform an AES decryption round using an 128-bit state and a round key"
        },
        {
            "instruction": "VAESENCLAST",
            "category": "Advanced Encryption Standard (AES) instructions set",
            "group": "Advanced Encryption Standard (AES) instructions set",
            "description": "Perform the last AES encryption round using an 128-bit state and a round key"
        },
        {
            "instruction": "VAESDECLAST",
            "category": "Advanced Encryption Standard (AES) instructions set",
            "group": "Advanced Encryption Standard (AES) instructions set",
            "description": "Perform the last AES decryption round using an 128-bit state and a round key"
        },
        {
            "instruction": "VAESIMC",
            "category": "Advanced Encryption Standard (AES) instructions set",
            "group": "Advanced Encryption Standard (AES) instructions set",
            "description": "Perform an inverse mix column transformation primitive"
        },
        {
            "instruction": "VAESKEYGENASSIST",
            "category": "Advanced Encryption Standard (AES) instructions set",
            "group": "Advanced Encryption Standard (AES) instructions set",
            "description": "Assist the creation of round keys with a key expansion schedule"
        },
        {
            "instruction": "VPCLMULQDQ",
            "category": "Advanced Encryption Standard (AES) instructions set",
            "group": "Advanced Encryption Standard (AES) instructions set",
            "description": "Perform carryless multiplication of two 64-bit numbers"
        },
        {
            "instruction": "BNDMK",
            "category": "Memory Protection Extensions (MPX) instructions set",
            "group": "Memory Protection Extensions (MPX) instructions set",
            "description": "Create a LowerBound and a UpperBound in a register"
        },
        {
            "instruction": "BNDCL",
            "category": "Memory Protection Extensions (MPX) instructions set",
            "group": "Memory Protection Extensions (MPX) instructions set",
            "description": "Check the address of a memory reference against a LowerBound"
        },
        {
            "instruction": "BNDCU",
            "category": "Memory Protection Extensions (MPX) instructions set",
            "group": "Memory Protection Extensions (MPX) instructions set",
            "description": "Check the address of a memory reference against an UpperBound in 1\u00e2\u0080\u0099s compliment form"
        },
        {
            "instruction": "BNDCN",
            "category": "Memory Protection Extensions (MPX) instructions set",
            "group": "Memory Protection Extensions (MPX) instructions set",
            "description": "Check the address of a memory reference against an UpperBound not in 1\u00e2\u0080\u0099s compliment form"
        },
        {
            "instruction": "BNDMOV",
            "category": "Memory Protection Extensions (MPX) instructions set",
            "group": "Memory Protection Extensions (MPX) instructions set",
            "description": "Load from memory or store to memory of the LowerBound and UpperBound to a register or from a register"
        },
        {
            "instruction": "BNDLDX",
            "category": "Memory Protection Extensions (MPX) instructions set",
            "group": "Memory Protection Extensions (MPX) instructions set",
            "description": "Load bounds using address translation"
        },
        {
            "instruction": "BNDSTX",
            "category": "Memory Protection Extensions (MPX) instructions set",
            "group": "Memory Protection Extensions (MPX) instructions set",
            "description": "Store bounds using address translation"
        },
        {
            "instruction": "GETSEC[CAPABILITIES]",
            "category": "Safer Mode Extensions (SMX) instructions set",
            "group": "Safer Mode Extensions (SMX) instructions set",
            "description": "Returns the available leaf functions of the GETSEC instruction"
        },
        {
            "instruction": "GETSEC[ENTERACCS]",
            "category": "Safer Mode Extensions (SMX) instructions set",
            "group": "Safer Mode Extensions (SMX) instructions set",
            "description": "Loads an authenticated code chipset module and enters authenticated code execution mode"
        },
        {
            "instruction": "GETSEC[EXITAC]",
            "category": "Safer Mode Extensions (SMX) instructions set",
            "group": "Safer Mode Extensions (SMX) instructions set",
            "description": "Exits authenticated code execution mode"
        },
        {
            "instruction": "GETSEC[SENTER]",
            "category": "Safer Mode Extensions (SMX) instructions set",
            "group": "Safer Mode Extensions (SMX) instructions set",
            "description": "Establishes a MLE which has its dynamic root of trust anchored to a chipset supporting Intel Trusted Execution Technology"
        },
        {
            "instruction": "GETSEC[SEXIT]",
            "category": "Safer Mode Extensions (SMX) instructions set",
            "group": "Safer Mode Extensions (SMX) instructions set",
            "description": "Exits the MLE"
        },
        {
            "instruction": "GETSEC[PARAMETERS]",
            "category": "Safer Mode Extensions (SMX) instructions set",
            "group": "Safer Mode Extensions (SMX) instructions set",
            "description": "Returns SMX related parameter information"
        },
        {
            "instruction": "GETSEC[SMCRTL]",
            "category": "Safer Mode Extensions (SMX) instructions set",
            "group": "Safer Mode Extensions (SMX) instructions set",
            "description": "SMX mode control"
        },
        {
            "instruction": "GETSEC[WAKEUP]",
            "category": "Safer Mode Extensions (SMX) instructions set",
            "group": "Safer Mode Extensions (SMX) instructions set",
            "description": "Wakes up sleeping logical processors inside an MLE"
        },
        {
            "instruction": "XACQUIRE",
            "category": "Transactional Synchronization Extensions (TSX) instructions set",
            "group": "Transactional Synchronization Extensions (TSX) instructions set",
            "description": "Prefix hint to the beginning of an HLE transaction region"
        },
        {
            "instruction": "XRELEASE",
            "category": "Transactional Synchronization Extensions (TSX) instructions set",
            "group": "Transactional Synchronization Extensions (TSX) instructions set",
            "description": "Prefix hint to the end of an HLE transaction region"
        },
        {
            "instruction": "XBEGIN",
            "category": "Transactional Synchronization Extensions (TSX) instructions set",
            "group": "Transactional Synchronization Extensions (TSX) instructions set",
            "description": "Transaction begin of an RTM transaction region"
        },
        {
            "instruction": "XEND",
            "category": "Transactional Synchronization Extensions (TSX) instructions set",
            "group": "Transactional Synchronization Extensions (TSX) instructions set",
            "description": "Transaction end of an RTM transaction region"
        },
        {
            "instruction": "XABORT",
            "category": "Transactional Synchronization Extensions (TSX) instructions set",
            "group": "Transactional Synchronization Extensions (TSX) instructions set",
            "description": "Abort an RTM transaction execution"
        },
        {
            "instruction": "XTEST",
            "category": "Transactional Synchronization Extensions (TSX) instructions set",
            "group": "Transactional Synchronization Extensions (TSX) instructions set",
            "description": "Test if executing in a transactional region"
        },
        {
            "instruction": "VMXON",
            "category": "Virtual Machine Extensions (VMX) instructions set",
            "group": "VMCS-maintenance Instructions",
            "description": "Takes a single 64-bit source operand in memory. It causes a logical processor to enter VMX root operation and to use the memory referenced by the operand to support VMX operation"
        },
        {
            "instruction": "VMPTRLD",
            "category": "Virtual Machine Extensions (VMX) instructions set",
            "group": "VMCS-maintenance Instructions",
            "description": "Takes a single 64-bit source operand in memory. It makes the referenced VMCS active and current"
        },
        {
            "instruction": "VMPTRST",
            "category": "Virtual Machine Extensions (VMX) instructions set",
            "group": "VMCS-maintenance Instructions",
            "description": "Takes a single 64-bit destination operand that is in memory. Current-VMCS pointer is stored into the destination operand"
        },
        {
            "instruction": "VMCLEAR",
            "category": "Virtual Machine Extensions (VMX) instructions set",
            "group": "VMCS-maintenance Instructions",
            "description": "Takes a single 64-bit operand in memory. The instruction sets the launch state of the VMCS referenced by the operand to \"clear\", renders that VMCS inactive, and ensures that data for the VMCS have been written to the VMCS-data area in the referenced VMCS region"
        },
        {
            "instruction": "VMREAD",
            "category": "Virtual Machine Extensions (VMX) instructions set",
            "group": "VMCS-maintenance Instructions",
            "description": "Reads a component from the VMCS (the encoding of that field is given in a register operand) and stores it into a destination operand"
        },
        {
            "instruction": "VMWRITE",
            "category": "Virtual Machine Extensions (VMX) instructions set",
            "group": "VMCS-maintenance Instructions",
            "description": "Writes a component to the VMCS (the encoding of that field is given in a register operand) from a source operand"
        },
        {
            "instruction": "VMLAUNCH",
            "category": "Virtual Machine Extensions (VMX) instructions set",
            "group": "VMCS-maintenance Instructions",
            "description": "Launches a virtual machine managed by the VMCS. A VM entry occurs, transferring control to the VM"
        },
        {
            "instruction": "VMRESUME",
            "category": "Virtual Machine Extensions (VMX) instructions set",
            "group": "VMCS-maintenance Instructions",
            "description": "Resumes a virtual machine managed by the VMCS. A VM entry occurs, transferring control to the VM"
        },
        {
            "instruction": "VMXOFF",
            "category": "Virtual Machine Extensions (VMX) instructions set",
            "group": "VMCS-maintenance Instructions",
            "description": "Causes the processor to leave VMX operation"
        },
        {
            "instruction": "INVEPT",
            "category": "Virtual Machine Extensions (VMX) instructions set",
            "group": "VMX-specific TLB-management Instructions",
            "description": "Invalidate cached EPT mappings in the processor to synchronize address translation in virtual machines with memory-resident EPT pages"
        },
        {
            "instruction": "INVVPID",
            "category": "Virtual Machine Extensions (VMX) instructions set",
            "group": "VMX-specific TLB-management Instructions",
            "description": "Invalidate cached mappings of address translation based on the Virtual Processor ID (VPID)"
        },
        {
            "instruction": "VMCALL",
            "category": "Virtual Machine Extensions (VMX) instructions set",
            "group": "Guest-available Instructions",
            "description": "Allows a guest in VMX non-root operation to call the VMM for service. A VM exit occurs, transferring control to the VMM"
        },
        {
            "instruction": "VMFUNC",
            "category": "Virtual Machine Extensions (VMX) instructions set",
            "group": "Guest-available Instructions",
            "description": "This instruction allows software in VMX non-root operation to invoke a VM function, which is processor functionality enabled and configured by software in VMX root operation. No VM exit occurs"
        }
    ]
}